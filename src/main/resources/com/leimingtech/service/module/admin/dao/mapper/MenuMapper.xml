<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leimingtech.service.module.admin.dao.mapper.MenuClassMapper">
    <resultMap id="BaseResultMap" type="com.leimingtech.core.entity.MenuClass">
        <id column="m_id" property="mid" jdbcType="VARCHAR"/>
        <result column="m_name" property="mname" jdbcType="VARCHAR"/>
        <result column="m_url" property="murl" jdbcType="VARCHAR"/>
        <result column="m_parent_id" property="mparentid" jdbcType="VARCHAR"/>
        <result column="m_sort" property="msort" jdbcType="INTEGER"/>
        <result column="m_level" property="mlevel" jdbcType="INTEGER"/>
        <result column="m_path" property="mpath" jdbcType="VARCHAR"/>
        <result column="m_description" property="mdescription" jdbcType="VARCHAR"/>
        <result column="m_permission" property="permission" jdbcType="VARCHAR"/>
        <result column="m_isshow" property="isshow" jdbcType="INTEGER"/>
        <result column="lan_en_us" property="en_US" jdbcType="VARCHAR"/>
        <result column="m_name" property="zh_CN" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="BaseResultMap1" type="com.leimingtech.core.entity.vo.MenuClassVo">
        <id column="m_id" property="mid" jdbcType="VARCHAR"/>
        <result column="has_child" property="hasChild" jdbcType="INTEGER"/>
        <result column="m_name" property="mname" jdbcType="VARCHAR"/>
        <result column="m_url" property="murl" jdbcType="VARCHAR"/>
        <result column="m_parent_id" property="mparentid" jdbcType="VARCHAR"/>
        <result column="m_sort" property="msort" jdbcType="INTEGER"/>
        <result column="m_level" property="mlevel" jdbcType="INTEGER"/>
        <result column="m_path" property="mpath" jdbcType="VARCHAR"/>
        <result column="m_description" property="mdescription" jdbcType="VARCHAR"/>
        <result column="m_isshow" property="isshow" jdbcType="INTEGER"/>
        <result column="m_permission" property="permission" jdbcType="INTEGER"/>
        <result column="m_name" property="zh_CN" jdbcType="VARCHAR"/>
        <result column="lan_en_us" property="en_US" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="BaseMenuLanguageMap" type="com.leimingtech.core.entity.MenuLanguage">
        <id column="menu_id" property="menuId" jdbcType="VARCHAR"/>
        <result column="lan_en_us" property="en_US" jdbcType="VARCHAR"/>
    </resultMap>


    <sql id="Base_Column_List">
        m_id, m_name, m_url, m_parent_id, m_sort, m_level,m_path,m_description,m_permission,m_isshow
    </sql>

    <sql id="Base_Column_List1">
        m_id, m_name, m_url, m_parent_id, m_sort, m_level,m_path,m_description,m_permission,m_isshow
    </sql>
    <insert id="save" parameterType="com.leimingtech.core.entity.MenuClass" keyProperty="mid">
        INSERT INTO shop_menu( m_id, m_name, m_url, m_parent_id, m_sort, m_level,m_path,m_description,m_permission,m_isshow)
        VALUES(#{mid},#{mname},#{murl},#{mparentid},#{msort},#{mlevel},#{mpath},#{mdescription},#{permission},#{isshow})
    </insert>
    <update id="update" parameterType="com.leimingtech.core.entity.MenuClass">
        update shop_menu
        <set>
            <if test="mname != null and mname !=''">
                m_name = #{mname},
            </if>
            <if test="murl != null and murl !=''">
                m_url = #{murl},
            </if>
            <if test="mparentid != null">
                m_parent_id=#{mparentid},
            </if>
            <if test="msort != null">
                m_sort=#{msort},
            </if>
            <if test="mlevel != null">
                m_level=#{mlevel},
            </if>
            <if test="mpath != null and mpath !=''">
                m_path = #{mpath},
            </if>
            <if test="mdescription != null">
                m_description = #{mdescription},
            </if>
            <if test="permission != null">
                m_permission = #{permission},
            </if>
            <if test="isshow != null">
                m_isshow = #{isshow}
            </if>
        </set>
        where m_id=#{mid}
    </update>

    <delete id="delete" parameterType="java.lang.String">
        delete from shop_menu  where m_id=#{mid}
    </delete>

    <select id="findById" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>, b.*
        from shop_menu a
        LEFT JOIN shop_menu_language b on a.m_id = b.menu_id
        where m_id=#{mid}
        <if test="isshow != null and isshow!=9">
            and m_isshow=#{isshow}
        </if>
    </select>

    <select id="findPageList" resultMap="BaseResultMap1">
        SELECT
        <include refid="Base_Column_List1"/>,
        (select count(1) from shop_menu s1 where s1.m_parent_id=s.m_id) has_child, b.*
        FROM shop_menu s
        left join shop_menu_language b on s.m_id = b.menu_id
        where s.m_parent_id = '0' order by s.m_level, s.m_sort desc
    </select>

    <select id="findList" resultMap="BaseResultMap" parameterType="int">
        SELECT
        <include refid="Base_Column_List"/>, b.*
        FROM shop_menu a
        left join shop_menu_language b on a.m_id = b.menu_id
        where 1=1
        <if test="isshow != null">
            and m_isshow=#{isshow}
        </if>
        order by m_level, m_sort desc
    </select>


    <select id="findCount" resultType="int">
        select count(*) from shop_menu where  m_parent_id = 0
    </select>

    <select id="findChildListmap" resultMap="BaseResultMap1" parameterType="map">
        SELECT
        <include refid="Base_Column_List1"/>,
        (select count(*) from shop_menu s1 where s1.m_parent_id=s.m_id) has_child
        FROM shop_menu s
        join shop_role_menu rm on s.m_id=rm.menu_id
        where m_parent_id = #{mparentid} and s.m_isshow=#{isshow}
        <if test="roleids != null and roleids!=''">
            and rm.role_id in (#{roleids})
        </if>
        order by s.m_level, s.m_sort desc
    </select>

    <select id="findChildList" resultMap="BaseResultMap1" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List1"/>,
        (select count(*) from shop_menu s1 where s1.m_parent_id=s.m_id) has_child, b.*
        FROM shop_menu s
        LEFT JOIN shop_menu_language b on s.m_id = b.menu_id
        where m_parent_id = #{mparentid}
        order by s.m_level, s.m_sort desc
    </select>

    <!--递归查询所有分类-->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>, b.*
        FROM shop_menu a
        LEFT JOIN shop_menu_language b on a.m_id = b.menu_id
        order by m_level, m_sort desc
    </select>

    <select id="findChild" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM shop_menu
        where m_parent_id = #{mparentid} order by m_level, m_sort desc
    </select>

    <!-- 修改子类类型 -->
    <update id="updateChildType" parameterType="com.leimingtech.core.entity.MenuClass">
        UPDATE  shop_menu
        SET  m_name = #{mname}
        WHERE m_parent_id = #{mid}
    </update>

    <!--根据parentId，得到id plash-->
    <select id="findbyparentid" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT m_parent_id
        FROM shop_menu
        where m_id = #{mparentid}
    </select>

    <!--判断是否有其它菜单以本Id，为父id-->
    <select id="findparentidCount" parameterType="java.lang.String" resultType="int">
        select count(*) from shop_menu where  m_parent_id = #{mid}
     </select>

    <!--根据角色ID获取菜单-->
    <select id="findByRoleids" resultMap="BaseResultMap">
        SELECT
        DISTINCT<include refid="Base_Column_List"/>, b.*
        FROM shop_menu menu
        LEFT JOIN shop_menu_language b on menu.m_id = b.menu_id
        join shop_role_menu rm on menu.m_id=rm.menu_id
        where rm.role_id in (#{roleids})
        <if test="isshow != null">
            and m_isshow = #{isshow}
        </if>
        order by m_level,m_sort desc
    </select>

    <insert id="saveMenuLanguage" parameterType="com.leimingtech.core.entity.MenuLanguage" keyProperty="menuId">
        INSERT INTO shop_menu_language( menu_id, lan_en_us)
        VALUES(#{menuId},#{en_US})
    </insert>

    <select id="getMenuLanguage" parameterType="java.lang.String" resultMap="BaseMenuLanguageMap">
        select * from shop_menu_language where menu_id = #{menuId}
    </select>

    <update id="updateMenuLanguage" parameterType="com.leimingtech.core.entity.MenuLanguage">
        UPDATE shop_menu_language
        SET lan_en_us = #{en_US}
        WHERE menu_id = #{menuId}
    </update>


</mapper>