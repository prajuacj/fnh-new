<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leimingtech.service.module.doc.dao.mapper.DocMapper">
    <resultMap id="BaseResultMap" type="com.leimingtech.core.entity.base.DocEntity" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="tag" property="tag" jdbcType="VARCHAR" />
        <result column="tag_demo" property="tagDemo" jdbcType="VARCHAR" />
        <result column="api_address" property="apiAddress" jdbcType="VARCHAR" />
        <result column="return_example_value" property="returnExampleValue" jdbcType="VARCHAR" />
        <result column="pid" property="pid" jdbcType="VARCHAR" />
        <result column="typeid" property="typeid" jdbcType="VARCHAR" />
        <result column="sort" property="sort" jdbcType="INTEGER" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="BIGINT" />
        <result column="createdby" property="createdby" jdbcType="VARCHAR" />
        <result column="updatecount" property="updatecount" jdbcType="INTEGER" />
        <result column="update_time" property="updateTime" jdbcType="BIGINT" />
        <result column="updateby" property="updateby" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, typeid, name, tag, tag_demo, api_address, return_example_value,pid,
        sort, description, status, create_time, createdby, updatecount, update_time,
        updateby
    </sql>
    
    <sql id="whereStatement">
		<where>
			1 = 1 
			and a.typeid = #{condition.typeid}
			<if test="condition.name != null and condition.name != ''">
	          	and a.name like
                <if test="dbName == 'oracle'">'%'||#{condition.name}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{condition.name}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{condition.name},'%')</if>
	        </if>
	        <if test="condition.status != null">
	          	and a.status = #{condition.status}
	        </if>
	        <if test="condition.pid != null and condition.pid != '' ">
	        	and a.pid = #{condition.pid}
	        </if>
		</where>
	</sql>

    <sql id="whereStatement1">
        <where>
            1 = 1
            and a.typeid = #{typeid}
            <if test="status != null">
                and a.status = #{status}
            </if>
            <if test="pid == 0">
                and a.pid is null
            </if>
            <if test="pid != null and pid != 0 ">
                and a.pid = #{pid}
            </if>
        </where>
    </sql>
	
	<sql id="whereStatement2">
		<where>
			1 = 1 
			and a.typeid = #{condition.typeid}
            <if test="condition.name != null and condition.name != ''">
                and a.name like
                <if test="dbName == 'oracle'">'%'||#{condition.name}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{condition.name}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{condition.name},'%')</if>
            </if>
	        <if test="condition.status != null">
	          	and a.status = #{condition.status}
	        </if>
            <if test="condition.pid != null and condition.pid != '' ">
                and a.pid = #{condition.pid}
            </if>
		</where>
	</sql>
    
    <!--查询条数-->
    <select id="getDocCount" parameterType="com.leimingtech.core.entity.base.DocEntity" resultType="int">
        SELECT count(1) FROM shop_doc a 
        <include refid="whereStatement2" />
    </select>

    <!--查询分页列表-->
    <select id="getDocList" parameterType="com.leimingtech.service.utils.page.Pager" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM shop_doc a 
        <include refid="whereStatement" />
        order by a.create_time desc
    </select>
    
    <!--查询所有列表-->
    <select id="getAllDocList" parameterType="com.leimingtech.core.entity.base.DocEntity" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM shop_doc a 
        <include refid="whereStatement1" />
    </select>

	<!--根据id获取数据-->
    <select id="getDocById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from shop_doc where id = #{id}
    </select>
    
    <!--保存数据-->
    <insert id="save" parameterType="com.leimingtech.core.entity.base.DocEntity" keyProperty="id">
        INSERT INTO shop_doc(id, name, typeid, tag, tag_demo, api_address, return_example_value,pid,sort, description, status, create_time, createdby)
        VALUES(#{id},#{name},#{typeid},#{tag},#{tagDemo},#{apiAddress},#{returnExampleValue},#{pid},#{sort},#{description},#{status},#{createTime},#{createdby})
    </insert>
    
    <!--更新数据-->
    <update id="update" parameterType="com.leimingtech.core.entity.base.DocEntity">
        update shop_doc
        set 
        name = #{name,jdbcType=VARCHAR},
        api_address = #{apiAddress, jdbcType=VARCHAR},
        sort = #{sort,jdbcType=INTEGER},
        description = #{description,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        return_example_value = #{returnExampleValue,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=BIGINT},
        updateby = #{updateby,jdbcType=VARCHAR}
        where id=#{id,jdbcType=INTEGER}
    </update>

	<!--删除数据-->
    <delete id="delete" parameterType="java.lang.String">
        delete from shop_doc where id=#{id}
    </delete>

</mapper>