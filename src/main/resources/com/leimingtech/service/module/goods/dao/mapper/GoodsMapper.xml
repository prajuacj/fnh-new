<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leimingtech.service.module.goods.dao.mapper.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.leimingtech.core.entity.base.Goods">
        <result column="goods_id" property="goodsId" jdbcType="VARCHAR"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="goods_subtitle" property="goodsSubtitle" jdbcType="VARCHAR"/>
        <result column="gc_id" property="gcId" jdbcType="VARCHAR"/>
        <result column="gc_name" property="gcName" jdbcType="VARCHAR"/>
        <result column="brand_id" property="brandId" jdbcType="VARCHAR"/>
        <result column="brand_name" property="brandName" jdbcType="VARCHAR"/>
        <result column="type_id" property="typeId" jdbcType="VARCHAR"/>
        <result column="store_id" property="storeId" jdbcType="VARCHAR"/>
        <result column="store_name" property="storeName" jdbcType="VARCHAR"/>
        <result column="spec_open" property="specOpen" jdbcType="INTEGER"/>
        <result column="spec_id" property="specId" jdbcType="VARCHAR"/>
        <result column="spec_name" property="specName" jdbcType="VARCHAR"/>
        <result column="goods_image" property="goodsImage" jdbcType="VARCHAR"/>
        <result column="goods_image_more" property="goodsImageMore" jdbcType="VARCHAR"/>
        <result column="goods_store_price" property="goodsStorePrice" jdbcType="DECIMAL"/>
        <result column="goods_serial" property="goodsSerial" jdbcType="VARCHAR"/>
        <result column="goods_show" property="goodsShow" jdbcType="INTEGER"/>
        <result column="goods_click" property="goodsClick" jdbcType="INTEGER"/>
        <result column="goods_state" property="goodsState" jdbcType="INTEGER"/>
        <result column="goods_commend" property="goodsCommend" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="goods_keywords" property="goodsKeywords" jdbcType="VARCHAR"/>
        <result column="goods_description" property="goodsDescription" jdbcType="VARCHAR"/>
        <result column="goods_body" property="goodsBody" jdbcType="VARCHAR"/>
        <result column="goods_attr" property="goodsAttr" jdbcType="VARCHAR"/>
        <result column="goods_spec" property="goodsSpec" jdbcType="VARCHAR"/>
        <result column="goods_col_img" property="goodsColImg" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="BIGINT"/>
        <result column="start_time" property="startTime" jdbcType="BIGINT"/>
        <result column="end_time" property="endTime" jdbcType="BIGINT"/>
        <result column="goods_form" property="goodsForm" jdbcType="INTEGER"/>
        <result column="transport_id" property="transportId" jdbcType="VARCHAR"/>
        <result column="py_price" property="pyPrice" jdbcType="DECIMAL"/>
        <result column="kd_price" property="kdPrice" jdbcType="DECIMAL"/>
        <result column="es_price" property="esPrice" jdbcType="DECIMAL"/>
        <result column="city_id" property="cityId" jdbcType="VARCHAR"/>
        <result column="city_name" property="cityName" jdbcType="VARCHAR"/>
        <result column="province_id" property="provinceId" jdbcType="VARCHAR"/>
        <result column="province_name" property="provinceName" jdbcType="VARCHAR"/>
        <result column="goods_close_reason" property="goodsCloseReason" jdbcType="VARCHAR"/>
        <result column="goods_store_state" property="goodsStoreState" jdbcType="INTEGER"/>
        <result column="commentnum" property="commentnum" jdbcType="INTEGER"/>
        <result column="salenum" property="salenum" jdbcType="INTEGER"/>
        <result column="goods_collect" property="goodsCollect" jdbcType="INTEGER"/>
        <result column="goods_transfee_charge" property="goodsTransfeeCharge" jdbcType="INTEGER"/>
        <result column="store_class_id" property="storeClassId" jdbcType="VARCHAR"/>
        <result column="goods_market_price" property="goodsMarketPrice" jdbcType="DECIMAL"/>
        <result column="goods_cost_price" property="goodCostPrice" jdbcType="DECIMAL"/>
        <result column="static_url" property="staticurl" jdbcType="VARCHAR"/>
        <result column="dynameic_url" property="dynameicurl" jdbcType="VARCHAR"/>
        <result column="real_url" property="realurl" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="BaseResultMap2" extends="BaseResultMap" type="com.leimingtech.core.entity.base.Goods">
        <result column="goodsTotalStorage" property="goodsTotalStorage" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BaseResultMap3" extends="BaseResultMap" type="com.leimingtech.core.entity.vo.GoodsTradeVo">
        <result column="trade_goodscount" property="tradeGoodsCount" jdbcType="VARCHAR"/>
        <result column="trade_goodsprice" property="tradeGoodsPrice" jdbcType="VARCHAR"/>
    </resultMap>


    <resultMap id="BaseResultMap4" type="com.leimingtech.core.entity.GoodsExcel">
        <result column="goods_id" property="goodsId" jdbcType="VARCHAR"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="gc_id" property="gcId" jdbcType="VARCHAR"/>
        <result column="goods_form" property="goodsForm" jdbcType="INTEGER"/>
        <result column="goods_subtitle" property="goodsSubtitle" jdbcType="VARCHAR"/>
        <result column="goods_store_price" property="goodsStorePrice" jdbcType="DECIMAL"/>
        <result column="goods_serial" property="goodsSerial" jdbcType="VARCHAR"/>
        <result column="goods_commend" property="goodsCommend" jdbcType="INTEGER"/>
        <result column="goods_keywords" property="goodsKeywords" jdbcType="VARCHAR"/>
        <result column="goods_description" property="goodsDescription" jdbcType="VARCHAR"/>
        <result column="goods_show" property="goodsShow" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BaseResultMap5" type="com.leimingtech.core.entity.GoodsExcel">
        <result column="store_name" property="storeName" jdbcType="VARCHAR"/>
        <result column="goods_id" property="goodsId" jdbcType="VARCHAR"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="goods_subtitle" property="goodsSubtitle" jdbcType="VARCHAR"/>
        <result column="gc_id" property="gcId" jdbcType="VARCHAR"/>
        <result column="gc_name" property="gcName" jdbcType="VARCHAR"/>
        <result column="goods_store_price" property="goodsStorePrice" jdbcType="DECIMAL"/>
        <result column="goods_market_price" property="goodsMarketPrice" jdbcType="DECIMAL"/>
        <result column="goods_cost_price" property="goodCostPrice" jdbcType="DECIMAL"/>
        <result column="brand_name" property="brandName" jdbcType="VARCHAR"/>
        <result column="type_id" property="typeId" jdbcType="VARCHAR"/>
        <result column="goods_serial" property="goodsSerial" jdbcType="VARCHAR"/>
        <result column="goods_show" property="goodsShow" jdbcType="INTEGER"/>
        <result column="goods_commend" property="goodsCommend" jdbcType="INTEGER"/>
        <result column="goods_keywords" property="goodsKeywords" jdbcType="VARCHAR"/>
        <result column="goods_description" property="goodsDescription" jdbcType="VARCHAR"/>
        <result column="goods_body" property="goodsBody" jdbcType="VARCHAR"/>
        <result column="goods_attr" property="goodsAttr" jdbcType="VARCHAR"/>
        <result column="goods_form" property="goodsForm" jdbcType="INTEGER"/>
        <result column="transport_id" property="transportId" jdbcType="VARCHAR"/>
        <result column="py_price" property="pyPrice" jdbcType="DECIMAL"/>
        <result column="kd_price" property="kdPrice" jdbcType="DECIMAL"/>
        <result column="es_price" property="esPrice" jdbcType="DECIMAL"/>
        <result column="province_name" property="provinceName" jdbcType="VARCHAR"/>
        <result column="city_name" property="cityName" jdbcType="VARCHAR"/>
        <result column="goods_store_state" property="goodsStoreState" jdbcType="INTEGER"/>
        <result column="salenum" property="salenum" jdbcType="INTEGER"/>
        <result column="goods_collect" property="goodsCollect" jdbcType="INTEGER"/>
        <result column="goods_transfee_charge" property="goodsTransfeeCharge" jdbcType="INTEGER"/>
        <result column="store_class_id" property="storeClassId" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        goods_id,goods_name,goods_subtitle,gc_id,gc_name,brand_id,brand_name,type_id,
        store_id,store_name,spec_open,spec_id,spec_name,goods_image,goods_image_more,
        goods_store_price,goods_serial,goods_show,goods_click,goods_state,
        goods_commend,create_time,goods_keywords,goods_description,goods_body,
        goods_attr,goods_spec,goods_col_img,update_time,start_time,end_time,
        goods_form,transport_id,py_price,kd_price,es_price,city_id,city_name,
        province_id,province_name,goods_close_reason,goods_store_state,commentnum,
        salenum,goods_collect,goods_transfee_charge,store_class_id,goods_market_price,
        goods_cost_price
    </sql>

    <sql id="Base_Column_List2">
        goods_id,goods_name,gc_id,goods_form,goods_subtitle,goods_store_price
        ,goods_serial,goods_commend,goods_keywords,goods_description,goods_show,
        goods_market_price,goods_cost_price
    </sql>

    <sql id="Base_Column_List3">
        sg.store_name,sg.goods_id,sg.goods_name,sg.goods_subtitle,sg.gc_id,sg.gc_name,sg.goods_store_price,sg.goods_market_price,
        sg.goods_cost_price,sg.brand_name,sg.type_id,sg.goods_serial,sg.goods_show,
        sg.goods_commend,sg.goods_keywords,sg.goods_description,sg.goods_body,sg.goods_attr,sg.goods_form,sg.transport_id,
        sg.py_price,sg.kd_price,sg.es_price,sg.province_name,sg.city_name,sg.goods_store_state,sg.salenum,sg.goods_collect,
        sg.goods_transfee_charge,sg.store_class_id
    </sql>

    <!-- 分页where条件 -->
    <sql id="whereStatement">
        <where>
            1 = 1
            <if test="condition.goodsName != null and condition.goodsName != '' ">
                and goods_name like
                <if test="dbName == 'oracle'">'%'||#{condition.goodsName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{condition.goodsName}+'%'</if>
                <if test="dbName == 'mysql'">CONCAT('%',#{condition.goodsName},'%')</if>

            </if>
            <if test="condition.brandId != null and condition.brandId != '' ">
                and brand_id = #{condition.brandId}
            </if>
            <if test="condition.storeId != null and condition.storeId != ''">
                and store_id = #{condition.storeId}
            </if>
            <if test="condition.goodsState != null">
                and goods_state = #{condition.goodsState}
            </if>
            <if test="condition.goodsShow != null">
                and goods_show = #{condition.goodsShow}
            </if>
            <if test="condition.goodsStoreState != null">
                and goods_store_state = #{condition.goodsStoreState}
            </if>
            <if test="condition.gcId != null and condition.gcId != ''">
                and gc_id = #{condition.gcId}
            </if>
            <if test="condition.storeClassId != null and condition.storeClassId != ''">
                and store_class_id = #{condition.storeClassId}
            </if>
            <if test="condition.typeId != null and condition.typeId != ''">
                and type_id = #{condition.typeId}
            </if>
            <if test="condition.cityId != null and condition.cityId != ''">
                and city_id = #{condition.cityId}
            </if>
            <if test="condition.provinceId != null and condition.provinceId != ''">
                and province_id = #{condition.provinceId}
            </if>
            <if test="condition.goodsCommend != null">
                and goods_commend = #{condition.goodsCommend}
            </if>
            <if test="condition.goodsSerial != null and condition.goodsSerial != '' ">
                and goods_serial like
                <if test="dbName == 'oracle'">'%'||#{condition.goodsSerial}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{condition.goodsSerial}+'%'</if>
                <if test="dbName == 'mysql'">CONCAT('%',#{condition.goodsSerial},'%')</if>
            </if>
            <if test="condition.storeName != null and condition.storeName != '' ">
                and store_name like
                <if test="dbName == 'oracle'">'%'||#{condition.storeName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{condition.storeName}+'%'</if>
                <if test="dbName == 'mysql'">CONCAT('%',#{condition.storeName},'%')</if>
            </if>
            <if test="condition.goodids!=null and condition.goodids!='' and  condition.goodids!='[]'">
                and goods_id not in
                <foreach item="item" index="index" collection="condition.goodids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            and is_del = 0
        </where>
    </sql>



    <!-- 分页where条件 sellerapi专用 -->
    <sql id="whereStatementseller">
        <where>
            1 = 1
            <if test="condition.goodsName != null and condition.goodsName != '' ">
                and sg.goods_name like
                <if test="dbName == 'oracle'">'%'||#{condition.goodsName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{condition.goodsName}+'%'</if>
                <if test="dbName == 'mysql'">CONCAT('%',#{condition.goodsName},'%')</if>
            </if>
            <if test="condition.brandId != null and condition.brandId != '' ">
                and sg.brand_id = #{condition.brandId}
            </if>
            <if test="condition.storeId != null and condition.storeId != ''">
                and sg.store_id = #{condition.storeId}
            </if>
            <if test="condition.goodsState != null">
                and sg.goods_state = #{condition.goodsState}
            </if>
            <if test="condition.goodsShow != null">
                and sg.goods_show = #{condition.goodsShow}
            </if>
            <if test="condition.goodsStoreState != null">
                and sg.goods_store_state = #{condition.goodsStoreState}
            </if>
            <if test="condition.gcId != null and condition.gcId != ''">
                and EXISTS(select sgc.gc_id from shop_goods_class sgc where sg.gc_id=sgc.gc_id and sgc.gc_idpath
                like
                <if test="dbName == 'oracle'">'||${condition.gcId}||,%'</if>
                <if test="dbName == 'mssql'">'${condition.gcId},%'</if>
                <if test="dbName == 'mysql'">CONCAT('${condition.gcId},%')</if>
                )
            </if>
            <if test="condition.storeClassId != null and condition.storeClassId != ''">
                and sg.store_class_id = #{condition.storeClassId}
            </if>
            <if test="condition.typeId != null and condition.typeId != ''">
                and sg.type_id = #{condition.typeId}
            </if>
            <if test="condition.cityId != null and condition.cityId != ''">
                and sg.city_id = #{condition.cityId}
            </if>
            <if test="condition.provinceId != null and condition.provinceId != ''">
                and sg.province_id = #{condition.provinceId}
            </if>
            <if test="condition.goodsCommend != null">
                and sg.goods_commend = #{condition.goodsCommend}
            </if>
            <if test="condition.goodsSerial != null and condition.goodsSerial != '' ">
                and sg.goods_serial like
                <if test="dbName == 'oracle'">'%'||#{condition.goodsSerial}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{condition.goodsSerial}+'%'</if>
                <if test="dbName == 'mysql'">CONCAT('%',#{condition.goodsSerial},'%')</if>
            </if>
            <if test="condition.storeName != null and condition.storeName != '' ">
                and sg.store_name like
                <if test="dbName == 'oracle'">'%'||#{condition.storeName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{condition.storeName}+'%'</if>
                <if test="dbName == 'mysql'">CONCAT('%',#{condition.storeName},'%')</if>
            </if>
            <if test="condition.goodids!=null and condition.goodids!='' and  condition.goodids!='[]'">
                and sg.goods_id not in
                <foreach item="item" index="index" collection="condition.goodids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            and is_del = 0
        </where>
    </sql>

    <sql id="orderBy">
        <if test="condition.sortField == 'createTime'">
            order by sg.create_time ${condition.orderBy}
        </if>
        <if test="condition.sortField == 'goodsStorePrice'">
            order by sg.goods_store_price ${condition.orderBy}
        </if>
        <if test="condition.sortField == 'salenum'">
            order by sg.salenum ${condition.orderBy}
        </if>
        <if test="condition.sortField == 'goodsCollect'">
            order by sg.goods_collect ${condition.orderBy}
        </if>
        <if test="condition.sortField == 'goodsClick'">
            order by sg.goods_click ${condition.orderBy}
        </if>
    </sql>

    <select id="findGoodPagerList" resultMap="BaseResultMap2" parameterType="com.leimingtech.service.utils.page.Pager">
        <!--select a.* from(-->
        <!--select-->
        <!--sg.*,sgs.goodsTotalStorage-->
        <!--from (-->
        <!--(select * from shop_goods<include refid="whereStatement"/>) sg-->
        <!--join-->
        <!--(select sum(spec_goods_storage) goodsTotalStorage,goods_id from shop_goods_spec group by goods_id) sgs-->
        <!--on sg.goods_id=sgs.goods_id-->
        <!--)-->


        SELECT sg.*,
        (select sum(spec_goods_storage) goodsTotalStorage from shop_goods_spec where goods_id = sg.goods_id group by
        goods_id ) as goodsTotalStorage
        from shop_goods sg
        LEFT JOIN shop_goods_class b ON b.gc_id = sg.gc_id
        WHERE 1 = 1
        <if test="condition.goodsName != null and condition.goodsName != '' ">
            and sg.goods_name like
            <if test="dbName == 'oracle'">'%'||#{condition.goodsName}||'%'</if>
            <if test="dbName == 'mssql'">'%'+#{condition.goodsName}+'%'</if>
            <if test="dbName == 'mysql'">CONCAT('%',#{condition.goodsName},'%')</if>

        </if>
        <if test="condition.brandId != null and condition.brandId != '' ">
            and sg.brand_id = #{condition.brandId}
        </if>
        <if test="condition.storeId != null and condition.storeId != ''">
            and sg.store_id = #{condition.storeId}
        </if>
        <if test="condition.goodsState != null">
            and sg.goods_state = #{condition.goodsState}
        </if>
        <if test="condition.goodsShow != null">
            and sg.goods_show = #{condition.goodsShow}
        </if>
        <if test="condition.goodsStoreState != null">
            and sg.goods_store_state = #{condition.goodsStoreState}
        </if>
        <if test="condition.gcId != null and condition.gcId != ''">
            and
            (
              sg.gc_id = #{condition.gcId} OR
              b.gc_idpath LIKE
              <if test="dbName == 'oracle'">'%'||#{condition.gcId}||'%'</if>
              <if test="dbName == 'mssql'">'%'+#{condition.gcId}+'%'</if>
              <if test="dbName == 'mysql'">CONCAT('%',#{condition.gcId},'%')</if>
            )
            and (sg.store_class_id is null or sg.store_class_id = '')
        </if>
        <if test="condition.storeClassId != null and condition.storeClassId != ''">
            and sg.store_class_id = #{condition.storeClassId}
        </if>
        <if test="condition.typeId != null and condition.typeId != ''">
            and sg.type_id = #{condition.typeId}
        </if>
        <if test="condition.cityId != null and condition.cityId != ''">
            and sg.city_id = #{condition.cityId}
        </if>
        <if test="condition.provinceId != null and condition.provinceId != ''">
            and sg.province_id = #{condition.provinceId}
        </if>
        <if test="condition.goodsCommend != null">
            and sg.goods_commend = #{condition.goodsCommend}
        </if>
        <if test="condition.goodsSerial != null and condition.goodsSerial != '' ">
            and sg.goods_serial like
            <if test="dbName == 'oracle'">'%'||#{condition.goodsSerial}||'%'</if>
            <if test="dbName == 'mssql'">'%'+#{condition.goodsSerial}+'%'</if>
            <if test="dbName == 'mysql'">CONCAT('%',#{condition.goodsSerial},'%')</if>
        </if>
        <if test="condition.storeName != null and condition.storeName != '' ">
            and sg.store_name like
            <if test="dbName == 'oracle'">'%'||#{condition.storeName}||'%'</if>
            <if test="dbName == 'mssql'">'%'+#{condition.storeName}+'%'</if>
            <if test="dbName == 'mysql'">CONCAT('%',#{condition.storeName},'%')</if>
        </if>
        <if test="condition.goodids!=null and condition.goodids!='' and  condition.goodids!='[]'">
            and sg.goods_id not in
            <foreach item="item" index="index" collection="condition.goodids"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and sg.is_del = 0





        order by sg.create_time desc
        <!--<if test="condition.sortField != null">-->
            <!--<if test="condition.orderBy != null">-->
                <!--<include refid="orderBy"/>-->
            <!--</if>-->
        <!--</if>-->
    </select>

    <!--sellerAPI 专用-->
    <select id="findGoodPagerListSeller" resultMap="BaseResultMap2" parameterType="com.leimingtech.service.utils.page.Pager">
        select sg.* from shop_goods sg
        <include refid="whereStatementseller"/>
        <if test="condition.sortField != null">
            <if test="condition.orderBy != null">
                <include refid="orderBy"/>
            </if>
        </if>
    </select>

    <!--* 通过一定条件的条件,查找某个商品,
    * 这个方法只会返回一个商品,
    * 使用方法:
    * 新建一个goods对象,在这个对象中
    * 一定要设置goodsid这个属性
    * 可以选择set属性:storeId,goodsState
    * 使用这个方法会根据你所设置的条件去查询,
    * 如果没有返回null
    -->
    <select id="findOneGoodByCondition" resultMap="BaseResultMap"
            parameterType="com.leimingtech.core.entity.base.Goods">
        select
        <include refid="Base_Column_List"/>
        from shop_goods
        WHERE goods_id = #{goodsId}
        <if test="storeId != null and storeId != ''">
            and store_id = #{storeId}
        </if>
        <if test="goodsState != null">
            and goods_state = #{goodsState}
        </if>
        <if test="goodsShow != null">
            and goods_show = #{goodsShow}
        </if>
        <if test="goodsStoreState != null">
            and goods_store_state = #{goodsStoreState}
        </if>
        and is_del = 0
    </select>

    <select id="findGoodById" resultMap="BaseResultMap2" parameterType="java.lang.String">
        SELECT sg.*,sgs.goodsTotalStorage FROM shop_goods sg
        join
        (select sum(spec_goods_storage) goodsTotalStorage,goods_id from shop_goods_spec group by goods_id) sgs
        on sg.goods_id=sgs.goods_id
        WHERE sg.goods_id = #{goodsId}
    </select>

    <insert id="saveGoods" parameterType="com.leimingtech.core.entity.base.Goods">
        insert into shop_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodsId != null and goodsId != ''">
                goods_id,
            </if>
            <if test="goodsName != null">
                goods_name,
            </if>
            <if test="goodsSubtitle != null">
                goods_subtitle,
            </if>
            <if test="gcId != null and gcId != ''">
                gc_id,
            </if>
            <if test="gcName != null">
                gc_name,
            </if>
            <if test="brandId != null and brandId != ''">
                brand_id,
            </if>
            <if test="brandName != null">
                brand_name,
            </if>
            <if test="typeId != null and typeId != ''">
                type_id,
            </if>
            <if test="storeId != null and storeId != ''">
                store_id,
            </if>
            <if test="storeName != null">
                store_name,
            </if>
            <if test="specOpen != null">
                spec_open,
            </if>
            <if test="specId != null and specId != ''">
                spec_id,
            </if>
            <if test="specName != null">
                spec_name,
            </if>
            <if test="goodsImage != null">
                goods_image,
            </if>
            <if test="goodsImageMore != null">
                goods_image_more,
            </if>
            <if test="goodsStorePrice != null">
                goods_store_price,
            </if>
            <if test="goodsSerial != null">
                goods_serial,
            </if>
            <if test="goodsShow != null">
                goods_show,
            </if>
            <if test="goodsClick != null">
                goods_click,
            </if>
            <if test="goodsState != null">
                goods_state,
            </if>
            <if test="goodsCommend != null">
                goods_commend,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="goodsKeywords != null">
                goods_keywords,
            </if>
            <if test="goodsDescription != null">
                goods_description,
            </if>
            <if test="goodsBody != null">
                goods_body,
            </if>
            <if test="goodsAttr != null">
                goods_attr,
            </if>
            <if test="goodsSpec != null">
                goods_spec,
            </if>
            <if test="goodsColImg != null">
                goods_col_img,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="goodsForm != null">
                goods_form,
            </if>
            <if test="transportId != null and transportId != ''">
                transport_id,
            </if>
            <if test="pyPrice != null">
                py_price,
            </if>
            <if test="kdPrice != null">
                kd_price,
            </if>
            <if test="esPrice != null">
                es_price,
            </if>
            <if test="cityId != null and cityId != ''">
                city_id,
            </if>
            <if test="cityName != null">
                city_name,
            </if>
            <if test="provinceId != null and provinceId != ''">
                province_id,
            </if>
            <if test="provinceName != null">
                province_name,
            </if>
            <if test="goodsCloseReason != null">
                goods_close_reason,
            </if>
            <if test="goodsStoreState != null">
                goods_store_state,
            </if>
            <if test="commentnum != null">
                commentnum,
            </if>
            <if test="salenum != null">
                salenum,
            </if>
            <if test="goodsCollect != null">
                goods_collect,
            </if>
            <if test="goodsTransfeeCharge != null">
                goods_transfee_charge,
            </if>
            <if test="storeClassId != null and storeClassId != ''">
                store_class_id,
            </if>
            <if test="goodsMarketPrice != null">
                goods_market_price,
            </if>
            <if test="goodCostPrice != null">
                goods_cost_price,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodsId != null and goodsId != ''">
                #{goodsId},
            </if>
            <if test="goodsName != null">
                #{goodsName},
            </if>
            <if test="goodsSubtitle != null">
                #{goodsSubtitle},
            </if>
            <if test="gcId != null and gcId != ''">
                #{gcId},
            </if>
            <if test="gcName != null">
                #{gcName},
            </if>
            <if test="brandId != null and brandId != ''">
                #{brandId},
            </if>
            <if test="brandName != null">
                #{brandName},
            </if>
            <if test="typeId != null and typeId != ''">
                #{typeId},
            </if>
            <if test="storeId != null and storeId != ''">
                #{storeId},
            </if>
            <if test="storeName != null">
                #{storeName},
            </if>
            <if test="specOpen != null">
                #{specOpen},
            </if>
            <if test="specId != null and specId != ''">
                #{specId},
            </if>
            <if test="specName != null">
                #{specName},
            </if>
            <if test="goodsImage != null">
                #{goodsImage},
            </if>
            <if test="goodsImageMore != null">
                #{goodsImageMore},
            </if>
            <if test="goodsStorePrice != null">
                #{goodsStorePrice},
            </if>
            <if test="goodsSerial != null">
                #{goodsSerial},
            </if>
            <if test="goodsShow != null">
                #{goodsShow},
            </if>
            <if test="goodsClick != null">
                #{goodsClick},
            </if>
            <if test="goodsState != null">
                #{goodsState},
            </if>
            <if test="goodsCommend != null">
                #{goodsCommend},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="goodsKeywords != null">
                #{goodsKeywords},
            </if>
            <if test="goodsDescription != null">
                #{goodsDescription},
            </if>
            <if test="goodsBody != null">
                #{goodsBody},
            </if>
            <if test="goodsAttr != null">
                #{goodsAttr},
            </if>
            <if test="goodsSpec != null">
                #{goodsSpec},
            </if>
            <if test="goodsColImg != null">
                #{goodsColImg},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="startTime != null">
                #{startTime},
            </if>
            <if test="endTime != null">
                #{endTime},
            </if>
            <if test="goodsForm != null">
                #{goodsForm},
            </if>
            <if test="transportId != null and transportId != ''">
                #{transportId},
            </if>
            <if test="pyPrice != null">
                #{pyPrice},
            </if>
            <if test="kdPrice != null">
                #{kdPrice},
            </if>
            <if test="esPrice != null">
                #{esPrice},
            </if>
            <if test="cityId != null and cityId != ''">
                #{cityId},
            </if>
            <if test="cityName != null">
                #{cityName},
            </if>
            <if test="provinceId != null and provinceId != ''">
                #{provinceId},
            </if>
            <if test="provinceName != null">
                #{provinceName},
            </if>
            <if test="goodsCloseReason != null">
                #{goodsCloseReason},
            </if>
            <if test="goodsStoreState != null">
                #{goodsStoreState},
            </if>
            <if test="commentnum != null">
                #{commentnum},
            </if>
            <if test="salenum != null">
                #{salenum},
            </if>
            <if test="goodsCollect != null">
                #{goodsCollect},
            </if>
            <if test="goodsTransfeeCharge != null">
                #{goodsTransfeeCharge},
            </if>
            <if test="storeClassId != null and storeClassId != ''">
                #{storeClassId},
            </if>

            <if test="goodsMarketPrice != null">
                #{goodsMarketPrice},
            </if>
            <if test="goodCostPrice != null">
                #{goodCostPrice},
            </if>
            <if test="isAdd != null">
                #{isAdd},
            </if>

        </trim>
    </insert>

    <update id="updateGoods" parameterType="com.leimingtech.core.entity.base.Goods">
        update shop_goods
        <set>
            <if test="goodsName != null">
                goods_name=#{goodsName},
            </if>
            <if test="goodsSubtitle != null">
                goods_subtitle=#{goodsSubtitle},
            </if>
            <if test="gcId != null and gcId != ''">
                gc_id=#{gcId},
            </if>
            <if test="gcName != null">
                gc_name=#{gcName},
            </if>
            <if test="brandId != null and brandId != ''">
                brand_id=#{brandId},
            </if>
            <if test="brandName != null">
                brand_name=#{brandName},
            </if>
            <if test="typeId != null and typeId != ''">
                type_id=#{typeId},
            </if>
            <if test="storeId != null and storeId != ''">
                store_id=#{storeId},
            </if>
            <if test="storeName != null">
                store_name=#{storeName},
            </if>
            <if test="specOpen != null">
                spec_open=#{specOpen},
            </if>
            <if test="specId != null and specId != ''">
                spec_id=#{specId},
            </if>
            <if test="specName != null">
                spec_name=#{specName},
            </if>
            <if test="goodsImage != null">
                goods_image=#{goodsImage},
            </if>
            <if test="goodsImageMore != null">
                goods_image_more=#{goodsImageMore},
            </if>
            <if test="goodsStorePrice != null">
                goods_store_price=#{goodsStorePrice},
            </if>
            <if test="goodsSerial != null">
                goods_serial=#{goodsSerial},
            </if>
            <if test="goodsShow != null">
                goods_show=#{goodsShow},
            </if>
            <if test="goodsClick != null">
                goods_click=#{goodsClick},
            </if>
            <if test="goodsState != null">
                goods_state=#{goodsState},
            </if>
            <if test="goodsCommend != null">
                goods_commend=#{goodsCommend},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="goodsKeywords != null">
                goods_keywords=#{goodsKeywords},
            </if>
            <if test="goodsDescription != null">
                goods_description=#{goodsDescription},
            </if>
            <if test="goodsBody != null">
                goods_body=#{goodsBody},
            </if>
            <if test="goodsAttr != null">
                goods_attr=#{goodsAttr},
            </if>
            <if test="goodsSpec != null">
                goods_spec=#{goodsSpec},
            </if>
            <if test="goodsColImg != null">
                goods_col_img=#{goodsColImg},
            </if>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="startTime != null">
                start_time=#{startTime},
            </if>
            <if test="endTime != null">
                end_time=#{endTime},
            </if>
            <if test="goodsForm != null">
                goods_form=#{goodsForm},
            </if>
            <if test="transportId != null and transportId != ''">
                transport_id=#{transportId},
            </if>
            <if test="pyPrice != null">
                py_price=#{pyPrice},
            </if>
            <if test="kdPrice != null">
                kd_price=#{kdPrice},
            </if>
            <if test="esPrice != null">
                es_price=#{esPrice},
            </if>
            <if test="cityId != null and cityId != ''">
                city_id=#{cityId},
            </if>
            <if test="cityName != null">
                city_name=#{cityName},
            </if>
            <if test="provinceId != null and provinceId != ''">
                province_id=#{provinceId},
            </if>
            <if test="provinceName != null">
                province_name=#{provinceName},
            </if>
            <if test="goodsCloseReason != null">
                goods_close_reason=#{goodsCloseReason},
            </if>
            <if test="goodsStoreState != null">
                goods_store_state=#{goodsStoreState},
            </if>
            <if test="commentnum != null">
                commentnum = commentnum + #{commentnum},
            </if>
            <if test="salenum != null">
                salenum = salenum + #{salenum},
            </if>
            <if test="goodsCollect != null">
                goods_collect = goods_collect + #{goodsCollect},
            </if>
            <if test="goodsTransfeeCharge != null">
                goods_transfee_charge=#{goodsTransfeeCharge},
            </if>
            <if test="storeClassId != null and storeClassId != ''">
                store_class_id=#{storeClassId},
            </if>
            <if test="goodsMarketPrice != null">
                goods_market_price=#{goodsMarketPrice},
            </if>
            <if test="goodCostPrice != null">
                goods_cost_price=#{goodCostPrice}
            </if>
        </set>
        where goods_id = #{goodsId}
    </update>

    <update id="deleteGoods" parameterType="java.lang.String">
        update shop_goods set is_del = 1,goods_state=0 where goods_id = #{goodsId}
    </update>
    <!--  查询总条数  -->
    <select id="countGoods" resultType="Integer" parameterType="com.leimingtech.core.entity.base.Goods">
        select count(1) from shop_goods
        <include refid="whereStatement2"/>
    </select>

    <!--  查询总条数where条件 -->
    <sql id="whereStatement2">
        <where>
            1 = 1
            <if test="goodsName != null and goodsName != '' ">
                and goods_name like
                <if test="dbName == 'oracle'">'%'||#{goodsName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{goodsName}+'%'</if>
                <if test="dbName == 'mysql'">CONCAT('%',#{goodsName},'%')</if>
            </if>
            <if test="storeId != null and storeId != ''">
                and store_id = #{storeId}
            </if>
            <if test="goodsState != null">
                and goods_state = #{goodsState}
            </if>
            <if test="goodsShow != null">
                and goods_show = #{goodsShow}
            </if>
            <if test="goodsStoreState != null">
                and goods_store_state = #{goodsStoreState}
            </if>
            <if test="gcId != null and gcId != ''">
                and gc_id = #{gcId}
            </if>
            <if test="storeClassId != null and storeClassId != ''">
                and store_class_id = #{storeClassId}
            </if>
            <if test="typeId != null and typeId != ''">
                and type_id = #{typeId}
            </if>
            <if test="cityId != null and cityId != ''">
                and city_id = #{cityId}
            </if>
            <if test="provinceId != null and provinceId != ''">
                and province_id = #{provinceId}
            </if>
            <if test="goodsCommend != null">
                and goods_commend = #{goodsCommend}
            </if>
            <if test="goodsSerial != null and goodsSerial != '' ">
                and goods_serial like
                <if test="dbName == 'oracle'">'%'||#{goodsSerial}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{goodsSerial}+'%'</if>
                <if test="dbName == 'mysql'">CONCAT('%',#{goodsSerial},'%')</if>
            </if>
            <!-- 本周新增 -->
            <if test="startTime != null">
                and create_time &gt;=#{startTime} and create_time &lt;= #{createTime}
            </if>
            <if test="goodids!=null and goodids!='' and  goodids!='[]'">
                and goods_id not in
                <foreach item="item" index="index" collection="goodids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            and is_del = 0
        </where>
    </sql>


    <sql id="orderByTrade">
        <if test="condition.tradeGoodsCount == 'tradeGoodsCount'">
            order by trade_goodscount ${condition.orderBy}
        </if>
        <if test="condition.tradeGoodsPrice == 'tradeGoodsPrice'">
            order by trade_goodsprice ${condition.orderBy}
        </if>
    </sql>

    <!--  查询总条数where条件 -->
    <sql id="whereStatement3">
        <where>
            1 = 1 and sg.salenum &gt; 0
            <if test="condition.storeId != null and condition.storeId != ''">
                and sg.store_id = #{condition.storeId}
            </if>
            <if test="condition.goodsState != null">
                and sg.goods_state = #{condition.goodsState}
            </if>
            <if test="condition.gcId != null and condition.gcId != ''">
                and sg.gc_id = #{condition.gcId}
            </if>
            <if test="condition.storeClassId != null and condition.storeClassId != ''">
                and sg.store_class_id = #{condition.storeClassId}
            </if>
            <if test="condition.typeId != null and condition.typeId != ''">
                and sg.type_id = #{condition.typeId}
            </if>
        </where>
    </sql>

    <sql id="whereStatementcount3">
        <where>
            1 = 1 and salenum &gt; 0
            <if test="storeId != null and storeId != ''">
                and store_id = #{storeId}
            </if>
            <if test="goodsState != null">
                and goods_state = #{goodsState}
            </if>
            <if test="gcId != null and gcId != ''">
                and gc_id = #{gcId}
            </if>
            <if test="storeClassId != null and storeClassId != ''">
                and store_class_id = #{storeClassId}
            </if>
            <if test="typeId != null and typeId != ''">
                and type_id = #{typeId}
            </if>
        </where>
    </sql>

    <select id="findTradeGoodPagerList" resultMap="BaseResultMap3"
            parameterType="com.leimingtech.service.utils.page.Pager">
        select
        sg.goods_id,
        sg.goods_name,
        sg.gc_name,
        sg.store_id,
        sg.province_name,
        sg.city_name,
        sg.store_name,
        new_goods.trade_goodscount,
        new_goods.trade_goodsprice
        from
        (
        SELECT
        sog.goods_id, COUNT(1) as trade_goodscount, SUM(goods_price) as trade_goodsprice
        FROM shop_order_goods sog
        left join shop_goods sgs  on sgs.goods_id = sog.goods_id
        group by sog.goods_id
        ) new_goods
        INNER JOIN shop_goods sg on sg.goods_id = new_goods.goods_id
        <include refid="whereStatement3"/>
        <if test="condition.orderBy != null">
            <include refid="orderByTrade"/>
        </if>
    </select>

    <select id="findTradeGoodcount" resultType="int" parameterType="com.leimingtech.core.entity.vo.GoodsTradeVo">
        select count(1) from shop_goods
        <include refid="whereStatementcount3"/>
    </select>


    <!--通过店铺id查找对应的商品-->
    <select id="findGoodListbystoreid" resultMap="BaseResultMap" parameterType="java.lang.String">
		 select goods_id from shop_goods where store_id = #{storeId}
	</select>
    <!--获取商品点击数据-->
    <select id="countGoodsClick" resultType="java.util.HashMap" parameterType="java.lang.String">
            SELECT goods_name goods_name,goods_click goods_click,0 as order_flag FROM shop_goods
            where store_id=#{storeId}  order by goods_click desc
	</select>

    <!--通过店铺id-->
    <select id="findGoodListbystoreid2" resultMap="BaseResultMap5" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List3"/>
        from shop_goods sg
        where sg.store_id = #{storeId}
    </select>

    <!--通过分类id查找对应的商品-->
    <select id="findGoodListByGcId" resultMap="BaseResultMap" parameterType="java.lang.String">
		 select * from shop_goods
		 where gc_id = #{gcId}
		 and is_del = 0
	</select>

    <!--更新url-->
    <update id="updateUrl" parameterType="com.leimingtech.core.entity.base.Goods">
        update shop_goods
        <set>static_url= #{staticurl}, dynameic_url= #{dynameicurl}, real_url= #{realurl}</set>
        where goods_id = #{goodsId}
    </update>
    
    <insert id="saveReserveInfo" parameterType="com.leimingtech.core.entity.base.ReserveInfo">
    	insert into `reserve_info` (
		  id,
		  infono,
		  price,
		  infocount,
		  area_id,
		  area_info,
		  store_id,
		  goods_id,
		  phonecode,
		  createtime
		) 
		values
		  (
		    #{id},
		    (select case when max(ri.infono) is null then CONCAT(DATE_FORMAT(NOW(),'%Y%m%d'),LPAD(1,4,'0')) else max(ri.infono) + 1 end from reserve_info ri where ri.createtime like CONCAT(DATE_FORMAT(NOW(),'%Y-%m-%d'),'%')),
		    #{price},
		    #{infocount, jdbcType=INTEGER},
		    #{areaId},
		    #{areaInfo, jdbcType=VARCHAR},
		    #{storeId},
		    #{goodsId},
		    #{phonecode},
		    DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s')
		  )
    </insert>
    <select id="findReserveByExample" parameterType="com.leimingtech.core.entity.base.ReserveInfo" resultType="com.leimingtech.core.entity.base.ReserveInfo">
    	SELECT 
		  `id`,
		  `infono`,
		  `price`,
		  `infocount`,
		  `area_id` areaId,
		  `area_info` areaInfo,
		  `store_id` storeId,
		  `goods_id` goodsId,
		  `phonecode`,
		  `createtime`,
		  `state`,
		  `handlereason`,
		  `handletime` 
		FROM
		  `reserve_info` 
		  where 1 = 1
		  <if test="state != null and state != ''">
		  	and state = #{state}
		  </if>
		  <if test="phonecode != null and phonecode != ''">
		  	and phonecode = #{phonecode}
		  </if>
		  order by createtime desc
    </select>
    <select id="findReserveByPager" parameterType="com.leimingtech.service.utils.page.Pager" resultMap="ReserveInfoMap">
    	select 
    	  ri.`id`,
		  ri.`infono`,
		  ri.`price`,
		  ri.`infocount`,
		  ri.`area_id` areaId,
		  ri.`area_info` areaInfo,
		  ri.`store_id` storeId,
		  ri.`goods_id` goodsId,
		  ri.`phonecode`,
		  ri.`createtime`,
		  ri.`state`,
		  ri.`handlereason`,
		  ri.`handletime`,
		  sg.goods_name goodsName,
		  sg.goods_image goodsImage,
		  ss.store_name storeName
		   from reserve_info ri 
    	left join shop_goods sg on ri.goods_id = sg.goods_id
    	left join shop_store ss on ri.store_id = ss.store_id
    	where 1 = 1
    	<if test="condition.startDate != null and condition.startDate != ''">
    		and ri.createtime &gt;= CONCAT(#{condition.startDate},' 00:00:00')
    	</if>
    	<if test="condition.endDate != null and condition.endDate != ''">
    		and ri.createtime &lt;= CONCAT(#{condition.endDate},' 23:59:59')
    	</if>
    	<if test="condition.storeId != null and condition.storeId != ''">
    		and ri.store_id = #{condition.storeId}
    	</if>
    	<if test="condition.phonecode != null and condition.phonecode != ''">
    		and ri.phonecode = #{condition.phonecode}
    	</if>
    	<if test="condition.state != null and condition.state != ''">
    		and ri.state = #{condition.state}
    	</if>
    	order by ri.infono asc
    </select>
    <update id="updateReserveInfo" parameterType="com.leimingtech.core.entity.base.ReserveInfo">
    	update reserve_info ri 
    	set ri.handlereason = #{handlereason},
    	ri.handletime = DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s'),
    	ri.state = #{state}
    	where ri.id = #{id}
    </update>
    <resultMap type="com.leimingtech.core.entity.base.ReserveInfo" id="ReserveInfoMap">
    	<id property="id" column="id" />
    	<result property="infono" column="infono" />
    	<result property="infocount" column="infocount" />
    	<result property="price" column="price" />
    	<result property="areaId" column="areaId" />
    	<result property="areaInfo" column="areaInfo" />
    	<result property="storeId" column="storeId" />
    	<result property="goodsId" column="goodsId" />
    	<result property="phonecode" column="phonecode" />
    	<result property="createtime" column="createtime" />
    	<result property="state" column="state" />
    	<result property="handlereason" column="handlereason" />
    	<result property="handletime" column="handletime" />
    	<association property="goods" javaType="com.leimingtech.core.entity.base.Goods">
    		<result property="goodsName" column="goodsName" />
    		<result property="goodsImage" column="goodsImage" />
    	</association>
    	<association property="store" javaType="com.leimingtech.core.entity.base.Store">
    		<result property="storeName" column="storeName" />
    	</association>
    </resultMap>
    
    
    <select id="findStoreByGoodsList" resultMap="BaseGoodsListMap" parameterType="com.leimingtech.core.entity.base.Goods">
        SELECT 
        	sg.goods_id,sg.goods_name,sg.goods_subtitle,sg.goods_market_price,sg.goods_image,sg.gc_id,sg.gc_name,sg.goods_transfee_charge,sg.spec_id,sgs.goodsTotalStorage 
        FROM 
        	shop_goods sg
        join
        	(select sum(spec_goods_storage) goodsTotalStorage,goods_id from shop_goods_spec group by goods_id) sgs
        on 
        	sg.goods_id=sgs.goods_id
        WHERE 
        	sg.store_id = #{storeId}
        	<if test="goodsCommend != null and goodsCommend != ''">
            	and sg.goods_commend = #{goodsCommend}
        	</if>
        	<if test="storeClassId != null and storeClassId != ''">
            	and sg.store_class_id = #{storeClassId}
        	</if>
        	and sg.goods_show = 1 and sg.is_del = 0 
        	order by sg.create_time desc
    </select>
    
    
    <select id="findIdByGoods" resultMap="BaseGoodsListMap" parameterType="java.lang.String">
        SELECT 
        	sg.goods_id,sg.goods_name,sg.goods_subtitle,sg.goods_market_price,sg.goods_image,sg.gc_id,sg.gc_name,sg.goods_transfee_charge,sg.spec_id,sgs.goodsTotalStorage 
        FROM 
        	shop_goods sg
        join
        	(select sum(spec_goods_storage) goodsTotalStorage,goods_id from shop_goods_spec group by goods_id) sgs
        on 
        	sg.goods_id=sgs.goods_id
        WHERE 
        	sg.goods_id = #{goodsId} 
    </select>
    
    <!--通过会员id-->
    <select id="findGoodListByMemerId" resultMap="BaseResultMap" parameterType="com.leimingtech.core.entity.base.Goods">
        select sg.goods_id,sg.goods_name,sg.goods_image
        from shop_goods sg
        left join shop_store ss  on ss.store_id = sg.store_id
        where sg.is_del = 0 and ss.member_id = #{memberId}
        <if test="goodsState != null">
            and sg.goods_state = #{goodsState}
        </if>
        <if test="goodsShow != null">
            and sg.goods_show = #{goodsShow}
        </if>
        limit 4
    </select>
    
    <!--前台查询商品信息-->
    <select id="findFrontGoodList" resultMap="BaseResultMap" parameterType="com.leimingtech.core.entity.base.Goods">
        select sg.goods_id,sg.goods_name,sg.goods_image,sg.goods_store_price
        from shop_goods sg
        where sg.is_del = 0 
        <if test="storeId != null and storeId != ''">
           and sg.store_id = #{storeId}
        </if>
        <if test="goodsState != null">
            and sg.goods_state = #{goodsState}
        </if>
        <if test="goodsShow != null">
            and sg.goods_show = #{goodsShow}
        </if>
    </select>
    
    <resultMap id="BaseGoodsListMap" type="com.leimingtech.core.entity.base.Goods">
        <result column="goods_id" property="goodsId" jdbcType="VARCHAR"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="goods_subtitle" property="goodsSubtitle" jdbcType="VARCHAR"/>
        <result column="goods_market_price" property="goodsMarketPrice" jdbcType="DECIMAL"/>
        <result column="goods_image" property="goodsImage" jdbcType="VARCHAR"/>
        <result column="gc_id" property="gcId" jdbcType="VARCHAR"/>
        <result column="gc_name" property="gcName" jdbcType="VARCHAR"/>
        <result column="goods_transfee_charge" property="goodsTransfeeCharge" jdbcType="INTEGER"/>
        <result column="spec_id" property="specId" jdbcType="VARCHAR"/>
        <result column="goodsTotalStorage" property="goodsTotalStorage" jdbcType="INTEGER"/>
    </resultMap>
</mapper>