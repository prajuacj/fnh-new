<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leimingtech.service.module.store.dao.mapper.StoreGradeMapper">
    <resultMap id="BaseResultMap" type="com.leimingtech.core.entity.base.StoreGrade">
        <result column="sg_id" property="sgId" jdbcType="VARCHAR"/>
        <result column="sg_name" property="sgName" jdbcType="VARCHAR"/>
        <result column="sg_goods_limit" property="sgGoodsLimit" jdbcType="INTEGER"/>
        <result column="sg_album_limit" property="sgAlbumLimit" jdbcType="INTEGER"/>
        <result column="sg_space_limit" property="sgSpaceLimit" jdbcType="INTEGER"/>
        <result column="sg_template_number" property="sgTemplateNumber" jdbcType="INTEGER"/>
        <result column="sg_template" property="sgTemplate" jdbcType="VARCHAR"/>
        <result column="sg_price" property="sgPrice" jdbcType="VARCHAR"/>
        <result column="sg_confirm" property="sgConfirm" jdbcType="TINYINT"/>
        <result column="sg_description" property="sgDescription" jdbcType="VARCHAR"/>
        <result column="sg_function" property="sgFunction" jdbcType="VARCHAR"/>
        <result column="sg_sort" property="sgSort" jdbcType="TINYINT"/>
        <result column="is_del" property="isDel" jdbcType="TINYINT"/>
        <result column="brokerage_scale" property="sgBrokerageScale" jdbcType="FLOAT"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="update_time" property="updateTime" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Base_Column_List">
		sg_id,sg_name,sg_goods_limit,sg_album_limit,sg_space_limit,sg_template_number,sg_template,
		sg_price,sg_confirm,sg_description,sg_function,sg_sort,brokerage_scale
	</sql>

    <sql id="whereStatement">
        <where>
            1 = 1
            and is_del = 0
            <if test="condition.sgName != null and condition.sgName != '' ">
                and sg_name like
                <if test="dbName == 'oracle'">'%'||#{condition.sgName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{condition.sgName}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{condition.sgName},'%')</if>
            </if>
        </where>
    </sql>

    <sql id="orderStatement">
		order by sg_sort DESC
	</sql>

    <!-- 根据ID查实体 -->
    <select id="queryById" resultMap="BaseResultMap"
            parameterType="com.leimingtech.service.utils.page.Pager">
        select
        <include refid="Base_Column_List"/>
        from shop_store_grade where
        sg_id = #{id} and is_del=0
        <include refid="orderStatement"/>
    </select>

    <!-- 查询List -->
    <select id="queryStoreGradeList" resultMap="BaseResultMap"
            parameterType="com.leimingtech.service.utils.page.Pager">
        select
        <include refid="Base_Column_List"/>
        from shop_store_grade
        <include refid="whereStatement"/>
        <include refid="orderStatement"/>
    </select>

    <!-- 根据ID删除数据 -->
    <update id="delete" parameterType="java.lang.String">
        update shop_store_grade
          set is_del = 1
        where sg_id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="queryCount" resultType="int" parameterType="com.leimingtech.core.entity.base.StoreGrade">
        select count(1) from shop_store_grade
        where is_del = 0
        <if test="sgName != null and sgName != ''">
            and sg_name = #{sgName}
        </if>
        <if test="sgSort != null">
            and sg_sort = #{sgSort}
        </if>
        <if test="sgId != null and sgId != ''">
            and sg_id != #{sgId}
        </if>
    </select>

    <!-- 查询List -->
    <select id="findStoreGradeList" resultMap="BaseResultMap" parameterType="com.leimingtech.core.entity.base.StoreGrade">
        select * from shop_store_grade where 1=1
        <if test="sgName != null and sgName != ''">
            and sg_name = #{sgName}
        </if>
        <if test="sgSort != null">
            and sg_sort = #{sgSort}
        </if>
        <if test="sgId != null">
            and sg_id = #{sgId}
        </if>
        <if test="isDel != null">
            and is_del = #{isDel}
        </if>
    </select>

    <update id="update" parameterType="com.leimingtech.core.entity.base.StoreGrade">
        update shop_store_grade
        <set>
            <if test="sgName != null and sgName != ''">
                sg_name = #{sgName},
            </if>
            <if test="sgGoodsLimit != null">
                sg_goods_limit = #{sgGoodsLimit},
            </if>
            <if test="sgAlbumLimit != null">
                sg_album_limit = #{sgAlbumLimit},
            </if>
            <if test="sgSpaceLimit != null">
                sg_space_limit = #{sgSpaceLimit},
            </if>
            <if test="sgTemplateNumber != null">
                sg_template_number = #{sgTemplateNumber},
            </if>
            <if test="sgTemplate != null and sgTemplate != ''">
                sg_template = #{sgTemplate},
            </if>
            <if test=" sgPrice != null and sgPrice != ''">
                sg_price = #{sgPrice},
            </if>
            <if test="sgConfirm != null">
                sg_confirm = #{sgConfirm},
            </if>
            <if test="sgDescription != null and sgDescription != ''">
                sg_description = #{sgDescription},
            </if>
            <if test="sgFunction != null and sgFucntion != ''">
                sg_function = #{sgFunction},
            </if>
            <if test="sgSort != null">
                sg_sort = #{sgSort},
            </if>
            <if test="sgBrokerageScale != null">
                brokerage_scale = #{sgBrokerageScale},
            </if>
            update_time = #{updateTime}
        </set>
        where sg_id = #{sgId}
    </update>

    <insert id="save" parameterType="com.leimingtech.core.entity.base.StoreGrade">
        INSERT INTO shop_store_grade (sg_id,sg_name,sg_goods_limit,sg_album_limit,sg_space_limit,sg_template_number,sg_template,
		sg_price,sg_confirm,sg_description,sg_function,sg_sort,brokerage_scale)
		values (#{sgId},#{sgName},#{sgGoodsLimit},#{sgAlbumLimit},#{sgSpaceLimit},#{sgTemplateNumber},#{sgTemplate},
		#{sgPrice},#{sgConfirm},#{sgDescription},#{sgFunction},#{sgSort},#{sgBrokerageScale})
    </insert>
</mapper>