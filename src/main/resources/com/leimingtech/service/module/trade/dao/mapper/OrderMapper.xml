<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leimingtech.service.module.trade.dao.mapper.OrderMapper">

    <resultMap id="BaseResultMap" type="com.leimingtech.core.entity.Order">
        <id column="order_id" property="orderId" jdbcType="VARCHAR"/>
        <result column="order_sn" property="orderSn" jdbcType="VARCHAR"/>
        <result column="store_id" property="storeId" jdbcType="VARCHAR"/>
        <result column="store_name" property="storeName" jdbcType="VARCHAR"/>
        <result column="buyer_id" property="buyerId" jdbcType="VARCHAR"/>
        <result column="buyer_name" property="buyerName" jdbcType="VARCHAR"/>
        <result column="buyer_email" property="buyerEmail" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="order_type" property="orderType" jdbcType="BIT"/>
        <result column="payment_id" property="paymentId" jdbcType="VARCHAR"/>
        <result column="payment_name" property="paymentName" jdbcType="VARCHAR"/>
        <result column="payment_code" property="paymentCode" jdbcType="VARCHAR"/>
        <result column="payment_branch" property="paymentBranch" jdbcType="VARCHAR"/>
        <result column="payment_direct" property="paymentDirect" jdbcType="VARCHAR"/>
        <result column="payment_time" property="paymentTime" jdbcType="BIGINT"/>
        <result column="payment_state" property="paymentState" jdbcType="INTEGER"/>
        <result column="out_sn" property="outSn" jdbcType="VARCHAR"/>
        <result column="trade_sn" property="tradeSn" jdbcType="VARCHAR"/>
        <result column="out_payment_code" property="outPaymentCode" jdbcType="VARCHAR"/>
        <result column="pay_message" property="payMessage" jdbcType="VARCHAR"/>
        <result column="shipping_time" property="shippingTime" jdbcType="BIGINT"/>
        <result column="shipping_express_id" property="shippingExpressId" jdbcType="BIT"/>
        <result column="shipping_code" property="shippingCode" jdbcType="VARCHAR"/>
        <result column="shipping_express_code" property="shippingExpressCode" jdbcType="VARCHAR"/>
        <result column="finnshed_time" property="finnshedTime" jdbcType="BIGINT"/>
        <result column="invoice" property="invoice" jdbcType="VARCHAR"/>
        <result column="goods_amount" property="goodsAmount" jdbcType="DECIMAL"/>
        <result column="discount" property="discount" jdbcType="DECIMAL"/>
        <result column="order_amount" property="orderAmount" jdbcType="DECIMAL"/>
        <result column="order_total_price" property="orderTotalPrice" jdbcType="DECIMAL"/>
        <result column="promo_price" property="promoPrice" jdbcType="DECIMAL"/>
        <result column="predeposit_amount" property="predepositAmount" jdbcType="DECIMAL"/>
        <result column="shipping_fee" property="shippingFee" jdbcType="DECIMAL"/>
        <result column="shipping_name" property="shippingName" jdbcType="VARCHAR"/>
        <result column="evaluation_status" property="evaluationStatus" jdbcType="INTEGER"/>
        <result column="evaluation_time" property="evaluationTime" jdbcType="BIGINT"/>
        <result column="evalseller_status" property="evalsellerStatus" jdbcType="INTEGER"/>
        <result column="evalseller_time" property="evalsellerTime" jdbcType="BIGINT"/>
        <result column="order_message" property="orderMessage" jdbcType="VARCHAR"/>
        <result column="order_state" property="orderState" jdbcType="INTEGER"/>
        <result column="order_pointscount" property="orderPointscount" jdbcType="INTEGER"/>
        <result column="voucher_id" property="voucherId" jdbcType="VARCHAR"/>
        <result column="voucher_price" property="voucherPrice" jdbcType="DECIMAL"/>
        <result column="coupon_id" property="couponId" jdbcType="VARCHAR"/>
        <result column="coupon_price" property="couponPrice" jdbcType="DECIMAL"/>
        <result column="voucher_code" property="voucherCode" jdbcType="VARCHAR"/>
        <result column="refund_state" property="refundState" jdbcType="INTEGER"/>
        <result column="return_state" property="returnState" jdbcType="INTEGER"/>
        <result column="refund_amount" property="refundAmount" jdbcType="DECIMAL"/>
        <result column="return_num" property="returnNum" jdbcType="INTEGER"/>
        <result column="group_id" property="groupId" jdbcType="VARCHAR"/>
        <result column="group_count" property="groupCount" jdbcType="INTEGER"/>
        <result column="xianshi_id" property="xianshiId" jdbcType="VARCHAR"/>
        <result column="xianshi_explain" property="xianshiExplain" jdbcType="VARCHAR"/>
        <result column="mansong_id" property="mansongId" jdbcType="VARCHAR"/>
        <result column="mansong_explain" property="mansongExplain" jdbcType="VARCHAR"/>
        <result column="bundling_id" property="bundlingId" jdbcType="VARCHAR"/>
        <result column="bundling_explain" property="bundlingExplain" jdbcType="VARCHAR"/>
        <result column="order_from" property="orderFrom" jdbcType="VARCHAR"/>
        <result column="cancel_cause" property="cancelCause" jdbcType="VARCHAR"/>
        <result column="deliver_explain" property="deliverExplain" jdbcType="VARCHAR"/>
        <result column="daddress_id" property="daddressId" jdbcType="VARCHAR"/>
        <result column="address_id" property="addressId" jdbcType="VARCHAR"/>
        <result column="pay_id" property="payId" jdbcType="VARCHAR"/>
        <result column="pay_sn" property="paySn" jdbcType="VARCHAR"/>
        <result column="balance_state" property="balanceState" jdbcType="INTEGER"/>
        <result column="balance_time" property="balanceTime" jdbcType="BIGINT"/>
        <result column="lock_state" property="lockState" jdbcType="INTEGER"/>

        <result column="barter_state" property="barterState" jdbcType="INTEGER"/>
        <result column="barter_num" property="barterNum" jdbcType="INTEGER"/>
        <result column="orderGoodsNum" property="orderGoodsNum" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 继承订单map,查询订单项,订单日志 -->
    <resultMap id="BaseResultMap1" type="com.leimingtech.core.entity.Order" extends="BaseResultMap">
        <collection property="orderGoodsList" ofType="com.leimingtech.core.entity.base.OrderGoods"
                    column="order_id" javaType="arraylist"
                    select="com.leimingtech.service.module.trade.dao.mapper.OrderGoodsMapper.findByOrderId">
        </collection>
        <collection property="orderLogList" ofType="com.leimingtech.core.entity.base.OrderLog"
                    column="order_id" javaType="arraylist"
                    select="com.leimingtech.service.module.trade.dao.mapper.OrderLogMapper.findByOrderId">
        </collection>
        <collection property="address" ofType="com.leimingtech.core.entity.base.OrderAddress"
                    column="address_id" javaType="com.leimingtech.core.entity.base.OrderAddress"
                    select="com.leimingtech.service.module.trade.dao.mapper.OrderAddressMapper.findById">
        </collection>
        <collection property="refundLog" ofType="com.leimingtech.core.entity.base.RefundLog"
                    column="order_id" javaType="com.leimingtech.core.entity.base.RefundLog"
                    select="com.leimingtech.service.module.trade.dao.mapper.RefundLogMapper.findRefundLogByOrderId">
        </collection>
    </resultMap>


    <resultMap id="BaseResultMap3" type="com.leimingtech.core.entity.OrderStaticExcel">
        <result column="order_sn" property="orderSn" jdbcType="VARCHAR"/>
        <result column="member_name" property="membername" jdbcType="VARCHAR"/>
        <result column="order_total_price" property="ordertotalprice" jdbcType="VARCHAR"/>
        <result column="order_amount" property="orderamount" jdbcType="VARCHAR"/>
        <result column="payment_code" property="paymentcode" jdbcType="VARCHAR"/>
        <result column="order_state" property="orderstate" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="BaseResultMap4" type="com.leimingtech.core.entity.vo.OrdermVo" extends="BaseResultMap">
        <result column="member_name" property="membername" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="BaseResultMap5" type="com.leimingtech.core.entity.OrderExcel">
        <result column="order_sn" property="orderSn" jdbcType="VARCHAR"/>
        <result column="store_name" property="storeName" jdbcType="VARCHAR"/>
        <result column="buyer_name" property="buyerName" jdbcType="VARCHAR"/>
        <result column="buyer_email" property="buyerEmail" jdbcType="VARCHAR"/>
        <result column="shipping_express_code" property="shippingExpressCode" jdbcType="VARCHAR"/>
        <result column="shipping_code" property="shippingCode" jdbcType="VARCHAR"/>
        <result column="order_type" property="orderType" jdbcType="BIT"/>
        <result column="payment_name" property="paymentName" jdbcType="VARCHAR"/>
        <result column="payment_direct" property="paymentDirect" jdbcType="VARCHAR"/>
        <result column="payment_state" property="paymentState" jdbcType="INTEGER"/>
        <result column="payment_time" property="paymentTime" jdbcType="BIGINT"/>
        <result column="out_sn" property="outSn" jdbcType="VARCHAR"/>
        <result column="pay_message" property="payMessage" jdbcType="VARCHAR"/>
        <result column="shipping_time" property="shippingTime" jdbcType="BIGINT"/>
        <result column="shipping_express_id" property="shippingExpressId" jdbcType="BIT"/>
        <result column="finnshed_time" property="finnshedTime" jdbcType="BIGINT"/>
        <result column="invoice" property="invoice" jdbcType="VARCHAR"/>
        <result column="goods_amount" property="goodsAmount" jdbcType="DECIMAL"/>
        <result column="discount" property="discount" jdbcType="DECIMAL"/>
        <result column="order_amount" property="orderAmount" jdbcType="DECIMAL"/>
        <result column="order_total_price" property="orderTotalPrice" jdbcType="DECIMAL"/>
        <result column="promo_price" property="promoPrice" jdbcType="DECIMAL"/>
        <result column="predeposit_amount" property="predepositAmount" jdbcType="DECIMAL"/>
        <result column="shipping_fee" property="shippingFee" jdbcType="DECIMAL"/>
        <result column="shipping_name" property="shippingName" jdbcType="VARCHAR"/>
        <result column="evaluation_status" property="evaluationStatus" jdbcType="INTEGER"/>
        <result column="evalseller_status" property="evalsellerStatus" jdbcType="INTEGER"/>
        <result column="evalseller_time" property="evalsellerTime" jdbcType="BIGINT"/>
        <result column="order_message" property="orderMessage" jdbcType="VARCHAR"/>
        <result column="order_state" property="orderState" jdbcType="INTEGER"/>
        <result column="order_pointscount" property="orderPointscount" jdbcType="INTEGER"/>
        <result column="out_payment_code" property="outPaymentCode" jdbcType="VARCHAR"/>
        <result column="coupon_price" property="couponPrice" jdbcType="DECIMAL"/>
        <result column="refund_state" property="refundState" jdbcType="INTEGER"/>
        <result column="return_state" property="returnState" jdbcType="INTEGER"/>
        <result column="barter_state" property="barterState" jdbcType="INTEGER"/>
        <result column="refund_amount" property="refundAmount" jdbcType="DECIMAL"/>
        <result column="return_num" property="returnNum" jdbcType="INTEGER"/>
        <result column="barter_num" property="barterNum" jdbcType="INTEGER"/>
        <result column="group_id" property="groupId" jdbcType="VARCHAR"/>
        <result column="group_count" property="groupCount" jdbcType="INTEGER"/>
        <result column="xianshi_explain" property="xianshiExplain" jdbcType="VARCHAR"/>
        <result column="mansong_explain" property="mansongExplain" jdbcType="VARCHAR"/>
        <result column="bundling_explain" property="bundlingExplain" jdbcType="VARCHAR"/>
        <result column="order_from" property="orderFrom" jdbcType="VARCHAR"/>
        <result column="cancel_cause" property="cancelCause" jdbcType="VARCHAR"/>
        <result column="deliver_explain" property="deliverExplain" jdbcType="VARCHAR"/>
        <result column="address_id" property="addressId" jdbcType="VARCHAR"/>
        <result column="pay_sn" property="paySn" jdbcType="VARCHAR"/>
        <result column="balance_state" property="balanceState" jdbcType="INTEGER"/>
        <result column="balance_time" property="balanceTime" jdbcType="BIGINT"/>
    </resultMap>

    <resultMap id="BaseResultMapByBill" type="com.leimingtech.core.entity.Order" extends="BaseResultMap">
        <collection property="orderGoodsList" ofType="com.leimingtech.core.entity.base.OrderGoods"
                    column="order_id" javaType="arraylist"
                    select="com.leimingtech.service.module.trade.dao.mapper.OrderGoodsMapper.findByOrderId">
        </collection>
    </resultMap>
    <resultMap type="com.leimingtech.core.entity.OrderSettlement" id="BaseResultBalance">
        <result column="date" property="date" jdbcType="VARCHAR"/>
        <result column="goods_amount_sum" property="goodsAmountSum" jdbcType="VARCHAR"/>
        <result column="discount_sum" property="discountSum" jdbcType="VARCHAR"/>
        <result column="order_amount_sum" property="orderAmountSum" jdbcType="VARCHAR"/>
        <result column="goods_amount_shipping_fee_sum" property="goodsAmountShippingFeeSum" jdbcType="VARCHAR"/>
        <result column="shipping_fee_sum" property="shippingFeeSum" jdbcType="VARCHAR"/>
        <result column="voucher_price_sum" property="voucherPriceSum" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 订单接口实体 -->
    <resultMap id="BaseResultByApi" type="com.leimingtech.core.entity.apibean.OrderApiBean">
        <id column="order_id" property="orderId" jdbcType="VARCHAR"/>
        <result column="order_sn" property="orderSn" jdbcType="VARCHAR"/>
        <result column="store_id" property="storeId" jdbcType="VARCHAR"/>
        <result column="store_name" property="storeName" jdbcType="VARCHAR"/>
        <result column="buyer_id" property="buyerId" jdbcType="VARCHAR"/>
        <result column="buyer_name" property="buyerName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="order_type" property="orderType" jdbcType="BIT"/>
        <result column="payment_id" property="paymentId" jdbcType="VARCHAR"/>
        <result column="payment_name" property="paymentName" jdbcType="VARCHAR"/>
        <result column="payment_code" property="paymentCode" jdbcType="VARCHAR"/>
        <result column="payment_direct" property="paymentDirect" jdbcType="VARCHAR"/>
        <result column="payment_time" property="paymentTime" jdbcType="BIGINT"/>
        <result column="payment_state" property="paymentState" jdbcType="INTEGER"/>
        <result column="out_sn" property="outSn" jdbcType="VARCHAR"/>
        <result column="pay_message" property="payMessage" jdbcType="VARCHAR"/>
        <result column="shipping_time" property="shippingTime" jdbcType="BIGINT"/>
        <result column="shipping_express_id" property="shippingExpressId" jdbcType="BIT"/>
        <result column="shipping_code" property="shippingCode" jdbcType="VARCHAR"/>
        <result column="shipping_express_code" property="shippingExpressCode" jdbcType="VARCHAR"/>
        <result column="finnshed_time" property="finnshedTime" jdbcType="BIGINT"/>
        <result column="invoice" property="invoice" jdbcType="VARCHAR"/>

        <result column="discount" property="discount" jdbcType="DECIMAL"/>
        <result column="order_total_price" property="orderTotalPrice" jdbcType="DECIMAL"/>
        <result column="promo_price" property="promoPrice" jdbcType="DECIMAL"/>

        <result column="goods_amount" property="goodsAmount" jdbcType="DECIMAL"/>
        <result column="order_amount" property="orderAmount" jdbcType="DECIMAL"/>
        <result column="predeposit_amount" property="predepositAmount" jdbcType="DECIMAL"/>
        <result column="shipping_fee" property="shippingFee" jdbcType="DECIMAL"/>
        <result column="shipping_name" property="shippingName" jdbcType="VARCHAR"/>
        <result column="evaluation_status" property="evaluationStatus" jdbcType="INTEGER"/>
        <result column="evaluation_time" property="evaluationTime" jdbcType="BIGINT"/>
        <result column="order_message" property="orderMessage" jdbcType="VARCHAR"/>
        <result column="order_state" property="orderState" jdbcType="INTEGER"/>
        <result column="refund_state" property="refundState" jdbcType="INTEGER"/>
        <result column="return_state" property="returnState" jdbcType="INTEGER"/>
        <result column="return_num" property="returnNum" jdbcType="INTEGER"/>
        <result column="pay_id" property="payId" jdbcType="VARCHAR"/>
        <result column="pay_sn" property="paySn" jdbcType="VARCHAR"/>
        <result column="lock_state" property="lockState" jdbcType="INTEGER"/>
        <collection property="orderGoodsList" ofType="com.leimingtech.core.entity.apibean.OrderGoodsApiBean"
                    column="order_id" javaType="arraylist"
                    select="com.leimingtech.service.module.trade.dao.mapper.OrderGoodsMapper.findApiBeanByOrderId">
        </collection>
    </resultMap>

    <!-- 订单用户实体 -->
    <resultMap id="BaseResultOm" type="com.leimingtech.core.entity.apibean.OrderMemberApiBean">
        <result column="soCount" property="soCount" jdbcType="INTEGER"/>
        <result column="orderAmount" property="orderAmount" jdbcType="DECIMAL"/>
        <result column="buyerId" property="buyerId" jdbcType="VARCHAR"/>
        <result column="buyerName" property="buyerName" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="BIGINT"/>
    </resultMap>


    <!-- 全部查询字段 -->
    <sql id="Base_Column_List">
		order_id, order_sn, store_id, store_name, buyer_id, buyer_name, buyer_email,
		create_time, order_type, payment_id, payment_name, payment_code, payment_direct, payment_state,
		out_sn, payment_time, pay_message, shipping_time, shipping_express_id, shipping_code,
		out_payment_code, finnshed_time, invoice, goods_amount, discount, order_amount, order_total_price,
		shipping_fee, shipping_name, evaluation_status, evaluation_time, evalseller_status,
		evalseller_time, order_message, order_state, order_pointscount, voucher_id, voucher_price,
		voucher_code, refund_state, return_state, refund_amount, return_num, group_id, group_count,
		xianshi_id, xianshi_explain, mansong_id, mansong_explain, bundling_id, bundling_explain,
		order_from, deliver_explain, daddress_id, address_id, pay_id, pay_sn, balance_state, balance_time,
		shipping_express_code, predeposit_amount, cancel_cause, promo_price, coupon_id, coupon_price, lock_state,
		payment_branch, trade_sn,barter_state,barter_num
	</sql>

    <!--订单导出查询字段-->
    <sql id="Base_Column_List2">
		order_sn,trade_sn,buyer_name, buyer_email,shipping_express_code,shipping_code,order_type,
		payment_name,payment_direct,payment_state,payment_time,out_sn,pay_message,shipping_time,
		shipping_express_id,finnshed_time,invoice,goods_amount,discount,order_amount,
		order_total_price,promo_price,predeposit_amount,shipping_fee,shipping_name,
		evaluation_status,evalseller_status,evalseller_time,order_message,order_state,
		order_pointscount,voucher_price,coupon_price,refund_state,return_state,barter_state,
		refund_amount,return_num,barter_num,group_id,group_count,xianshi_explain,mansong_explain,
		bundling_explain,order_from,cancel_cause,deliver_explain,address_id,pay_sn,
		balance_state,balance_time

	</sql>

    <!--订单接口实体字段-->
    <sql id="Base_Column_Api">
        order_id, order_sn, store_id, store_name, buyer_id, buyer_name, create_time, order_type,
        payment_id, payment_name, payment_code, payment_direct, payment_time, payment_state,
        out_sn, pay_message, shipping_time, shipping_express_id, shipping_code, shipping_express_code,
        finnshed_time, invoice
        , goods_amount, order_amount, predeposit_amount,order_total_price,discount,shipping_fee,promo_price
        , shipping_name,
        evaluation_status, evaluation_time, order_message, order_state, refund_state, return_state,
        return_num, pay_id, pay_sn, lock_state
    </sql>

    <!-- 查询条件 -->
    <sql id="whereStatement">
        <if test="condition.orderSn != null and condition.orderSn != '' ">
            and (order_sn like
            <if test="dbName == 'oracle'">'%'||#{condition.orderSn}||'%'</if>
            <if test="dbName == 'mssql'">'%'+#{condition.orderSn}+'%'</if>
            <if test="dbName == 'mysql'">concat('%',#{condition.orderSn},'%')</if>
        </if>
        <if test="condition.storeName != null and condition.storeName != '' ">
            or store_name like
            <if test="dbName == 'oracle'">'%'||#{condition.storeName}||'%'</if>
            <if test="dbName == 'mssql'">'%'+#{condition.storeName}+'%'</if>
            <if test="dbName == 'mysql'">concat('%',#{condition.storeName},'%')</if>)
        </if>
        <if test="condition.orderState != null and condition.orderState!=20 and condition.orderState!=100 and condition.orderState!=101">
            and order_state = #{condition.orderState, jdbcType=INTEGER}
        </if>
        <if test="condition.orderState != null and condition.orderState==20">
            and (order_state = #{condition.orderState, jdbcType=INTEGER} or order_state = 50)
        </if>
        <if test="condition.orderState != null and condition.orderState==101">
            and (order_state = 20 or order_state = 60)
        </if>
        <if test="condition.orderState != null and condition.orderState==100">
            and (order_state = 10 or order_state = 50)
        </if>

        <if test="condition.buyerName != null and condition.buyerName != ''">
            and buyer_name like
            <if test="dbName == 'oracle'">'%'||#{condition.buyerName}||'%'</if>
            <if test="dbName == 'mssql'">'%'+#{condition.buyerName}+'%'</if>
            <if test="dbName == 'mysql'">concat('%',#{condition.buyerName},'%')</if>
        </if>
        <if test="condition.paymentCode != null and condition.paymentCode != ''">
            and payment_code = #{condition.paymentCode,jdbcType=VARCHAR}
        </if>
        <if test="condition.startTime != null and condition.startTime != '' ">
            and create_time &gt;= #{condition.startTime}
        </if>
        <if test="condition.endTime != null and condition.endTime != '' ">
            and create_time &lt; #{condition.endTime}
        </if>
        <if test="condition.storeId != null and condition.storeId != '' ">
            and store_id = #{condition.storeId}
        </if>
        <if test="condition.buyerId != null and condition.buyerId != '' ">
            and buyer_id = #{condition.buyerId}
        </if>
        <if test="condition.balanceState != null">
            and balance_state = #{condition.balanceState}
        </if>
        <if test="condition.evaluationStatus != null">
            and evaluation_status = #{condition.evaluationStatus}
        </if>
        <if test="condition.orderStates != null">
            and order_state in
            <foreach collection="condition.orderStates" item="state" index="index"
                     open="(" close=")" separator=",">
                #{state}
            </foreach>
        </if>

        <if test="condition.lockState != null ">
            and lock_state = #{condition.lockState}
        </if>
    </sql>

    <sql id="whereStatement1">
        <if test="orderSn != null and orderSn != '' ">
            and (order_sn like
            <if test="dbName == 'oracle'">'%'||#{orderSn}||'%'</if>
            <if test="dbName == 'mssql'">'%'+#{orderSn}+'%'</if>
            <if test="dbName == 'mysql'">concat('%',#{orderSn},'%')</if>
        </if>
        <if test="storeName != null and storeName != '' ">
            OR store_name like
            <if test="dbName == 'oracle'">'%'||#{storeName, jdbcType=VARCHAR}||'%'</if>
            <if test="dbName == 'mssql'">'%'+#{storeName, jdbcType=VARCHAR}+'%'</if>
            <if test="dbName == 'mysql'">concat('%',#{storeName, jdbcType=VARCHAR},'%')</if>
            )
        </if>
        <if test="orderState != null and orderState!=20">
            and order_state = #{orderState, jdbcType=INTEGER}
        </if>
        <if test="orderState != null and orderState==20">
            and (order_state = #{orderState, jdbcType=INTEGER} or order_state = 50)
        </if>
        <if test="buyerName != null and buyerName != ''">
            and buyer_name like
            <if test="dbName == 'oracle'">'%'||#{buyerName,jdbcType=VARCHAR}||'%'</if>
            <if test="dbName == 'mssql'">'%'+#{buyerName,jdbcType=VARCHAR}+'%'</if>
            <if test="dbName == 'mysql'">concat('%',#{buyerName,jdbcType=VARCHAR},'%')</if>
        </if>
        <if test="paymentCode != null and paymentCode != ''">
            and payment_code = #{paymentCode,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null and startTime != '' ">
            and create_time &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            and create_time &lt; #{endTime}
        </if>
        <if test="storeId != null and storeId != '' ">
            and store_id = #{storeId}
        </if>
        <if test="buyerId != null and buyerId != '' ">
            and buyer_id = #{buyerId}
        </if>
        <if test="balanceState != null">
            and balance_state = #{balanceState}
        </if>
        <if test="evaluationStatus != null">
            and evaluation_status = #{evaluationStatus}
        </if>
        <if test="orderStates != null and orderStates != '' ">
            and order_state in
            <foreach collection="orderStates" item="state" index="index"
                     open="(" close=")" separator=",">
                #{state}
            </foreach>
        </if>
        <if test="lockState != null ">
            and lock_state = #{lockState}
        </if>
    </sql>

    <!-- 结算所需查询条件 -->
    <sql id="whereStatementByBill">
        <if test="condition.startTime != null and condition.startTime != '' ">
            and finnshed_time &gt;= #{condition.startTime}
        </if>
        <if test="condition.endTime != null and condition.endTime != '' ">
            and finnshed_time &lt; #{condition.endTime}
        </if>
        <if test="condition.orderState != null ">
            and order_state = #{condition.orderState, jdbcType=INTEGER}
        </if>
    </sql>


    <!-- 插入订单 -->
    <insert id="saveOrder" parameterType="com.leimingtech.core.entity.Order" keyProperty="orderId">
        insert into shop_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            order_id, order_sn, store_id, store_name, buyer_id, buyer_name, create_time, order_type, payment_id,
            payment_name, payment_code, payment_state, lock_state,
            <if test="paymentTime !=null and paymentTime != '' ">
                payment_time,
            </if>
            <if test="buyerEmail !=null and buyerEmail != '' ">
                buyer_email,
            </if>
            <if test="paymentDirect != null and paymentDirect != '' ">
                payment_direct,
            </if>
            <if test="outSn != null and outSn != '' ">
                out_sn,
            </if>
            <if test="payMessage != null and payMessage != '' ">
                pay_message,
            </if>
            <if test="shippingExpressId != null and shippingExpressId != '' ">
                shipping_express_id,
            </if>
            <if test="shippingCode != null">
                shipping_code,
            </if>
            <if test="outPaymentCode != null and outPaymentCode != '' ">
                out_payment_code,
            </if>
            <if test="invoice != null and invoice != '' ">
                invoice,
            </if>
            <if test="goodsAmount != null">
                goods_amount,
            </if>
            <if test="discount != null">
                discount,
            </if>
            <if test="orderAmount != null">
                order_amount,
            </if>
            <if test="shippingFee != null">
                shipping_fee,
            </if>
            <if test="shippingName != null">
                shipping_name,
            </if>
            <if test="evaluationStatus != null">
                evaluation_status,
            </if>
            <if test="evalsellerStatus != null">
                evalseller_status,
            </if>
            <if test="orderMessage != null and orderMessage != '' ">
                order_message,
            </if>
            <if test="orderState != null">
                order_state,
            </if>
            <if test="orderPointscount != null">
                order_pointscount,
            </if>
            <if test="voucherId != null and voucherId != '' ">
                voucher_id,
            </if>
            <if test="voucherPrice != null">
                voucher_price,
            </if>
            <if test="voucherCode != null and voucherCode != '' ">
                voucher_code,
            </if>
            <if test="refundState != null">
                refund_state,
            </if>
            <if test="returnState != null">
                return_state,
            </if>
            <if test="refundAmount != null">
                refund_amount,
            </if>
            <if test="returnNum != null">
                return_num,
            </if>
            <if test="groupId != null and groupId != '' ">
                group_id,
            </if>
            <if test="groupCount != null">
                group_count,
            </if>
            <if test="xianshiId != null and xianshiId != '' ">
                xianshi_id,
            </if>
            <if test="xianshiExplain != null and xianshiExplain != '' ">
                xianshi_explain,
            </if>
            <if test="mansongId != null and mansongId != '' ">
                mansong_id,
            </if>
            <if test="mansongExplain != null and mansongExplain != '' ">
                mansong_explain,
            </if>
            <if test="bundlingId != null and bundlingId != '' ">
                bundling_id,
            </if>
            <if test="bundlingExplain != null and bundlingExplain != '' ">
                bundling_explain,
            </if>
            <if test="orderFrom != null">
                order_from,
            </if>
            <if test="deliverExplain != null and deliverExplain != ''">
                deliver_explain,
            </if>
            <if test="daddressId != null and daddressId != '' ">
                daddress_id,
            </if>
            <if test="addressId != null and addressId != '' ">
                address_id,
            </if>
            <if test="payId != null and payId != '' ">
                pay_id,
            </if>
            <if test="paySn != null and paySn != '' ">
                pay_sn,
            </if>
            <if test="balanceState != null">
                balance_state,
            </if>
            <if test="balanceTime != null">
                balance_time,
            </if>
            <if test="shippingExpressCode != null">
                shipping_express_code,
            </if>
            <if test="predepositAmount != null">
                predeposit_amount,
            </if>
            <if test="cancelCause != null">
                cancel_cause,
            </if>
            <if test="orderTotalPrice != null">
                order_total_price,
            </if>
            <if test="promoPrice != null">
                promo_price,
            </if>
            <if test="couponId != null and couponId != '' ">
                coupon_id,
            </if>
            <if test="couponPrice != null">
                coupon_price,
            </if>
            <if test="paymentBranch != null and paymentBranch != '' ">
                payment_branch,
            </if>
            <if test="tradeSn != null and tradeSn != '' ">
                trade_sn,
            </if>
            <if test="barterState != null">
                barter_state,
            </if>
            <if test="barterNum != null">
                barter_num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{orderId}, #{orderSn}, #{storeId}, #{storeName}, #{buyerId}, #{buyerName}, #{createTime},
            #{orderType}, #{paymentId}, #{paymentName}, #{paymentCode}, #{paymentState}, #{lockState},
            <if test="paymentTime !=null and paymentTime != '' ">
                #{paymentTime},
            </if>
            <if test="buyerEmail !=null and buyerEmail != '' ">
                #{buyerEmail},
            </if>
            <if test="paymentDirect != null and paymentDirect != '' ">
                #{paymentDirect},
            </if>
            <if test="outSn != null and outSn != '' ">
                #{outSn},
            </if>
            <if test="payMessage != null and payMessage != '' ">
                #{payMessage},
            </if>
            <if test="shippingExpressId != null">
                #{shippingExpressId},
            </if>
            <if test="shippingCode != null">
                #{shippingCode},
            </if>
            <if test="outPaymentCode != null and outPaymentCode != '' ">
                #{outPaymentCode},
            </if>
            <if test="invoice != null and invoice != '' ">
                #{invoice},
            </if>
            <if test="goodsAmount != null">
                #{goodsAmount},
            </if>
            <if test="discount != null">
                #{discount},
            </if>
            <if test="orderAmount != null">
                #{orderAmount},
            </if>
            <if test="shippingFee != null">
                #{shippingFee},
            </if>
            <if test="shippingName != null">
                #{shippingName},
            </if>
            <if test="evaluationStatus != null">
                #{evaluationStatus},
            </if>
            <if test="evalsellerStatus != null">
                #{evalsellerStatus},
            </if>
            <if test="orderMessage != null and orderMessage != '' ">
                #{orderMessage},
            </if>
            <if test="orderState != null">
                #{orderState},
            </if>
            <if test="orderPointscount != null">
                #{orderPointscount},
            </if>
            <if test="voucherId != null and voucherId != '' ">
                #{voucherId},
            </if>
            <if test="voucherPrice != null">
                #{voucherPrice},
            </if>
            <if test="voucherCode != null and voucherCode != '' ">
                #{voucherCode},
            </if>
            <if test="refundState != null">
                #{refundState},
            </if>
            <if test="returnState != null">
                #{returnState},
            </if>
            <if test="refundAmount != null">
                #{refundAmount},
            </if>
            <if test="returnNum != null">
                #{returnNum},
            </if>
            <if test="groupId != null and groupId != '' ">
                #{groupId},
            </if>
            <if test="groupCount != null">
                #{groupCount},
            </if>
            <if test="xianshiId != null and xianshiId != '' ">
                #{xianshiId},
            </if>
            <if test="xianshiExplain != null and xianshiExplain != '' ">
                #{xianshiExplain},
            </if>
            <if test="mansongId != null and mansongId != '' ">
                #{mansongId},
            </if>
            <if test="mansongExplain != null and mansongExplain != '' ">
                #{mansongExplain},
            </if>
            <if test="bundlingId != null and bundlingId != '' ">
                #{bundlingId},
            </if>
            <if test="bundlingExplain != null and bundlingExplain != '' ">
                #{bundlingExplain},
            </if>
            <if test="orderFrom != null">
                #{orderFrom},
            </if>
            <if test="deliverExplain != null and deliverExplain != ''">
                #{deliverExplain},
            </if>
            <if test="daddressId != null and daddressId != '' ">
                #{daddressId},
            </if>
            <if test="addressId != null and addressId != '' ">
                #{addressId},
            </if>
            <if test="payId != null and payId != '' ">
                #{payId},
            </if>
            <if test="paySn != null and paySn != '' ">
                #{paySn},
            </if>
            <if test="balanceState != null">
                #{balanceState},
            </if>
            <if test="balanceTime != null">
                #{balanceTime},
            </if>
            <if test="shippingExpressCode != null">
                #{shippingExpressCode},
            </if>
            <if test="predepositAmount != null">
                #{predepositAmount},
            </if>
            <if test="cancelCause != null">
                #{cancelCause},
            </if>
            <if test="orderTotalPrice != null">
                #{orderTotalPrice},
            </if>
            <if test="promoPrice != null">
                #{promoPrice},
            </if>
            <if test="couponId != null and couponId != '' ">
                #{couponId},
            </if>
            <if test="couponPrice != null">
                #{couponPrice},
            </if>
            <if test="paymentBranch != null and paymentBranch != '' ">
                #{paymentBranch},
            </if>
            <if test="tradeSn != null and tradeSn != '' ">
                #{tradeSn},
            </if>
            <if test="barterState != null">
                #{barterState},
            </if>
            <if test="barterNum != null">
                #{barterNum},
            </if>
        </trim>
    </insert>

    <!-- 删除订单 -->
    <delete id="deleteOrder" parameterType="java.lang.String">
		delete from shop_order where order_id = #{orderId}
	</delete>

    <!-- 修改订单 -->
    <update id="updateOrder" parameterType="com.leimingtech.core.entity.Order">
        update shop_order
        <set>
            <if test="orderSn != null and orderSn != '' ">
                order_sn = #{orderSn},
            </if>
            <if test="storeId != null and storeId != '' ">
                store_id = #{storeId},
            </if>
            <if test="storeName != null and storeName != '' ">
                store_name = #{storeName},
            </if>
            <if test="buyerId != null and buyerId != '' ">
                buyer_id = #{buyerId},
            </if>
            <if test="buyerName != null and buyerName != '' ">
                buyer_name = #{buyerName},
            </if>
            <if test="buyerEmail != null and buyerEmail != '' ">
                buyer_email = #{buyerEmail},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="orderType != null">
                order_type = #{orderType},
            </if>
            <if test="paymentId != null and paymentId != '' ">
                payment_id = #{paymentId},
            </if>
            <if test="paymentName != null and paymentName != '' ">
                payment_name = #{paymentName},
            </if>
            <if test="paymentCode != null and paymentCode != '' ">
                payment_code = #{paymentCode},
            </if>
            <if test="paymentDirect != null and paymentDirect != '' ">
                payment_direct = #{paymentDirect},
            </if>
            <if test="paymentTime != null">
                payment_time = #{paymentTime},
            </if>
            <if test="paymentState != null">
                payment_state = #{paymentState},
            </if>
            <if test="outSn != null and outSn != '' ">
                out_sn = #{outSn},
            </if>
            <if test="outPaymentCode = null and outPaymentCode != '' ">
                out_payment_code = #{outPaymentCode},
            </if>
            <if test="payMessage != null and payMessage != ''">
                pay_message = #{payMessage},
            </if>
            <if test="shippingTime != null">
                shipping_time = #{shippingTime},
            </if>
            <if test="shippingExpressId != null and shippingExpressId != '' ">
                shipping_express_id = #{shippingExpressId},
            </if>
            <if test="shippingCode != null and shippingCode != '' ">
                shipping_code = #{shippingCode},
            </if>
            <if test="finnshedTime != null">
                finnshed_time = #{finnshedTime},
            </if>
            <if test="invoice != null and invoice != ''">
                invoice = #{invoice},
            </if>
            <if test="goodsAmount != null">
                goods_amount = #{goodsAmount},
            </if>
            <if test="discount != null">
                discount = #{discount},
            </if>
            <if test="orderAmount != null">
                order_amount = #{orderAmount},
            </if>
            <if test="shippingFee != null">
                shipping_fee = #{shippingFee},
            </if>
            <if test="shippingName != null and shippingName != '' ">
                shipping_name = #{shippingName},
            </if>
            <if test="evaluationStatus != null">
                evaluation_status = #{evaluationStatus},
            </if>
            <if test="evaluationTime != null">
                evaluation_time = #{evaluationTime},
            </if>
            <if test="evalsellerStatus != null">
                evalseller_status = #{evalsellerStatus},
            </if>
            <if test="evalsellerTime != null">
                evalseller_time = #{evalsellerTime},
            </if>
            <if test="orderMessage != null and orderMessage != ''">
                order_message = #{orderMessage},
            </if>
            <if test="orderState != null">
                order_state = #{orderState},
            </if>
            <if test="orderPointscount != null">
                order_pointscount = #{orderPointscount},
            </if>
            <if test="voucherId != null and voucherId != '' ">
                voucher_id = #{voucherId},
            </if>
            <if test="voucherPrice != null">
                voucher_price = #{voucherPrice},
            </if>
            <if test="voucherCode != null and voucherCode != '' ">
                voucher_code = #{voucherCode},
            </if>
            <if test="refundState != null">
                refund_state = #{refundState},
            </if>
            <if test="refundAmount != null">
                refund_amount = #{refundAmount},
            </if>
            <if test="returnState != null">
                return_state = #{returnState},
            </if>
            <if test="returnNum != null">
                return_num = #{returnNum},
            </if>
            <if test="barterState != null">
                barter_state = #{barterState},
            </if>
            <if test="barterNum != null">
                barter_num = #{barterNum},
            </if>
            <if test="groupId != null and groupId != '' ">
                group_id = #{groupId},
            </if>
            <if test="groupCount != null">
                group_count = #{groupCount},
            </if>
            <if test="xianshiId != null and xianshiId != '' ">
                xianshi_id = #{xianshiId},
            </if>
            <if test="xianshiExplain != null and xianshiExplain != '' ">
                xianshi_explain = #{xianshiExplain},
            </if>
            <if test="mansongId != null and mansongId != '' ">
                mansong_id = #{mansongId},
            </if>
            <if test="mansongExplain != null and mansongExplain != ''">
                mansong_explain = #{mansongExplain},
            </if>
            <if test="bundlingId != null and bundlingId != '' ">
                bundling_id = #{bundlingId},
            </if>
            <if test="bundlingExplain != null and bundlingExplain != ''">
                bundling_explain = #{bundlingExplain},
            </if>
            <if test="orderFrom != null and orderFrom != '' ">
                order_from = #{orderFrom},
            </if>
            <if test="deliverExplain != null and deliverExplain != ''">
                deliver_explain = #{deliverExplain},
            </if>
            <if test="daddressId != null and daddressId != '' ">
                daddress_id = #{daddressId},
            </if>
            <if test="addressId != null and addressId != '' ">
                address_id = #{addressId},
            </if>
            <if test="payId != null and payId != '' ">
                pay_id = #{payId},
            </if>
            <if test="paySn != null and paySn != '' ">
                pay_sn = #{paySn},
            </if>
            <if test="balanceState != null">
                balance_state = #{balanceState},
            </if>
            <if test="balanceTime != null">
                balance_time = #{balanceTime},
            </if>
            <if test="shippingExpressCode != null and shippingExpressCode != '' ">
                shipping_express_code = #{shippingExpressCode},
            </if>
            <if test="predepositAmount != null">
                predeposit_amount = #{predepositAmount},
            </if>
            <if test="cancelCause != null">
                cancel_cause = #{cancelCause},
            </if>
            <if test="orderTotalPrice">
                order_total_price = #{orderTotalPrice},
            </if>
            <if test="promoPrice != null">
                promo_price = #{promoPrice},
            </if>
            <if test="couponId != null and couponId != '' ">
                coupon_id = #{couponId},
            </if>
            <if test="couponPrice != null">
                coupon_price = #{couponPrice},
            </if>
            <if test="lockState != null">
                lock_state = #{lockState},
            </if>
            <if test="paymentBranch != null and paymentBranch != '' ">
                payment_branch = #{paymentBranch},
            </if>
            <if test="tradeSn != null and tradeSn != '' ">
                trade_sn = #{tradeSn},
            </if>
        </set>
        where order_id = #{orderId}
    </update>

    <!-- 修改订单状态 -->
    <update id="updateOrderState" parameterType="com.leimingtech.core.entity.Order">
        update shop_order
        <set>
            <if test="paymentState != null">
                payment_state = #{paymentState},
            </if>
            <if test="finnshedTime != null">
                finnshed_time = #{finnshedTime},
            </if>
            <if test="shippingTime != null">
                shipping_time = #{shippingTime},
            </if>
            order_state = #{orderState}
        </set>
        where order_id = #{orderId}
    </update>

    <!-- 分页查询订单总条数 -->
    <select id="findOrderCount" parameterType="com.leimingtech.core.entity.Order" resultType="int">
        select count(1) from shop_order where 1=1
        <include refid="whereStatement1"/>
    </select>

    <!-- 分页查询订单 -->
    <select id="findOrderList" parameterType="com.leimingtech.service.utils.page.Pager" resultMap="BaseResultMap1">
        select
        <include refid="Base_Column_List"/>
        from shop_order where 1=1
        <include refid="whereStatement"/>
        order by create_time desc
    </select>

    <!-- 分页查询结算所需订单 -->
    <select id="findBillOrderList" parameterType="com.leimingtech.service.utils.page.Pager"
            resultMap="BaseResultMapByBill">
        select
        <include refid="Base_Column_List"/>
        from shop_order where 1=1
        <include refid="whereStatementByBill"/>
        order by create_time desc
    </select>

    <!-- 根据id查询订单,有订单项 -->
    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap1">
        select
        <include refid="Base_Column_List"/>
        from shop_order where order_id = #{orderId}
    </select>

    <!-- 根据id查询订单,有订单项 -->
    <select id="findOrderDetail" parameterType="com.leimingtech.core.entity.Order" resultMap="BaseResultMap1">
        select
        <include refid="Base_Column_List"/>,
        (select sum(goods_num) from shop_order_goods goods WHERE goods.order_id = so.order_id) as orderGoodsNum
        from shop_order so where so.order_id = #{orderId}
        <if test="buyerId != null and buyerId != '' ">
            and so.buyer_id = #{buyerId}
        </if>
        <if test="storeId != null and storeId != '' ">
            and so.store_id = #{storeId}
        </if>
    </select>

    <!-- 根据订单编号查询订单信息 -->
    <select id="findByOrderSn" parameterType="java.lang.String" resultMap="BaseResultMap1">
        select
        <include refid="Base_Column_List"/>
        from shop_order where order_sn = #{orderSn}
    </select>

    <!-- 根据订单支付编号查询订单 -->
    <select id="findByPaySn" parameterType="java.lang.String" resultMap="BaseResultMap1">
        select
        <include refid="Base_Column_List"/>
        from shop_order where pay_sn = #{paySn}
    </select>

    <!-- 根据订单支付id查询订单 -->
    <select id="findByPayId" parameterType="java.lang.String" resultMap="BaseResultMap1">
        select
        <include refid="Base_Column_List"/>
        from shop_order where pay_id = #{payId}
    </select>


    <!-- 根据不同的时间段查出相应的订单量 -->
    <select id="countorderbuy" resultType="com.leimingtech.core.entity.OrderCount" parameterType="map">
        (
        select
        <if test="dbName == 'mysql'">
            FROM_UNIXTIME(create_time/1000,#{timesn}) ordate,
        </if>

        <if test="dbName == 'oracle'">
            (TO_DATE('19700101','yyyy:mm:DD')+ create_time/86400000+TO_NUMBER(SUBSTR(TZ_OFFSET(sessiontimezone),1,3))/24
            ) ordate,
        </if>

        <if test="dbName == 'mssql'">
            CONVERT(varchar(${sqltimesn}),DATEADD(S,create_time/1000,'1970-01-01 08:00:00'),120) ordate,
        </if>
        count(1) num,sum(order_total_price) orderprice
        from shop_order
        where store_id=#{storeId} and create_time &gt;=#{starttime} and create_time &lt;= #{endtime}
        <if test="orderstate != null and orderstate!=''">
            and order_state = #{orderstate}
        </if>
        group by
        <if test="dbName == 'mysql'">
            FROM_UNIXTIME(create_time/1000,#{timesn})
        </if>

        <if test="dbName == 'oracle'">
            (TO_DATE('19700101','yyyy:mm:DD')+ create_time/86400000+TO_NUMBER(SUBSTR(TZ_OFFSET(sessiontimezone),1,3))/24
            )
        </if>

        <if test="dbName == 'mssql'">
            CONVERT(varchar(${sqltimesn}),DATEADD(S,create_time/1000,'1970-01-01 08:00:00'),120)
        </if>
        )
        union(
        select
        '订单总数' ordate,count(1) num,sum(order_total_price) orderprice
        from shop_order
        where store_id=#{storeId} and create_time &gt;= #{starttime} and create_time &lt;= #{endtime}
        <if test="orderstate != null and orderstate!=''">
            and order_state = #{orderstate}
        </if>
        )
    </select>

    <!-- 根据不同的时间段查出相应的购买数量 -->
    <select id="findPurchaseRateIndex" resultType="com.leimingtech.core.entity.GoodsGeneralCount" parameterType="map">
        <!-- select goods_id as goodsId,goods_name as goodsName,count(goods_id) as num from shop_order_goods where order_id in (
            select order_id from shop_order where store_id = #{condition.storeId} and order_state &gt;= 20 and create_time &gt; #{condition.starttime} and create_time &lt;= #{condition.endtime}
        ) group by goods_id ,goods_name order by num desc
        -->

        select goods_id as goodsId ,goods_name as goodsName ,count(1) as num,
        <if test="dbName == 'mysql'">
            FROM_UNIXTIME(create_time/1000,#{timesn})
        </if>

        <if test="dbName == 'oracle'">
            TO_CHAR((TO_DATE('19700101','yyyy:mm:dd')+ create_time/86400000+TO_NUMBER(SUBSTR(TZ_OFFSET(sessiontimezone),1,3))/24
            ), 'yyyy-mm-dd')
        </if>

        <if test="dbName == 'mssql'">
            CONVERT(varchar(${sqltimesn}),DATEADD(S,create_time/1000,'1970-01-01 08:00:00'),120)
        </if>
        as createDate
        <if test="dbName == 'mysql'">
            from shop_order_goods as og
            LEFT JOIN shop_order as o on og.order_id = o.order_id
        </if>

        <if test="dbName == 'oracle'">
            from shop_order_goods og
            LEFT JOIN shop_order o on og.order_id = o.order_id
        </if>

        <if test="dbName == 'mssql'">
            from shop_order_goods as og
            LEFT JOIN shop_order as o on og.order_id = o.order_id
        </if>
        where stores_id=#{storeId} and store_id=#{storeId} and order_state &gt;= 20 and create_time &gt; #{starttime}
        and create_time &lt;= #{endtime}
        group by goods_id,goods_name ,

        <if test="dbName == 'mysql'">
            FROM_UNIXTIME(create_time/1000,#{timesn})
        </if>

        <if test="dbName == 'oracle'">
            TO_CHAR((TO_DATE('19700101','yyyy:mm:dd')+ create_time/86400000+TO_NUMBER(SUBSTR(TZ_OFFSET(sessiontimezone),1,3))/24
            ), 'yyyy-mm-dd')
        </if>

        <if test="dbName == 'mssql'">
            CONVERT(varchar(${sqltimesn}),DATEADD(S,create_time/1000,'1970-01-01 08:00:00'),120)
        </if>

        order by createDate asc
    </select>

    <!--根据条件查询订单，导excel表时用的-->
    <select id="findOrderByCondition" parameterType="com.leimingtech.core.entity.Order" resultMap="BaseResultMap5">
        select
        <include refid="Base_Column_List2"/>
        from shop_order where 1=1
        <include refid="whereStatement1"/>
    </select>

    <!-- 根据订单状态查询订单数量 -->
    <select id="findOrderCountByOrder" parameterType="com.leimingtech.core.entity.Order" resultType="int">
        select count(1) from shop_order where 1=1 and evaluation_status!=1
        <include refid="whereStatement1"/>
    </select>

    <!-- 获取店铺列表 -->
    <select id="findorderexcel" resultMap="BaseResultMap3" parameterType="map">
        select so.order_sn,sm.member_name,so.order_total_price,so.order_amount,
        so.payment_code,so.order_state,so.create_time from shop_order so LEFT JOIN
        shop_member sm on so.buyer_id=sm.member_id where 1=1
        <if test="storeId != null and storeId != '' ">
            and store_id = #{storeId}
        </if>
        <if test="orderstate != null and orderstate != '' ">
            and order_state = #{orderstate}
        </if>
        <if test="startime != null and startime != '' ">
            and so.create_time &gt;= #{startime}
        </if>
        <if test="endtime != null and endtime != '' ">
            and so.create_time &lt;= #{endtime}
        </if>
        order BY order_state
    </select>
    <!-- 分页查询订单 -->
    <select id="findOrderinfo" parameterType="com.leimingtech.service.utils.page.Pager" resultMap="BaseResultMap4">
        select so.order_sn,sm.member_name,so.order_total_price,so.order_amount,
        so.payment_code,so.order_state,so.create_time from shop_order so LEFT JOIN
        shop_member sm on so.buyer_id=sm.member_id where 1=1
        <if test="condition.orderState != null ">
            and order_state = #{condition.orderState}
        </if>
        <if test="condition.storeId != null and condition.storeId != '' ">
            and store_id = #{condition.storeId}
        </if>
        <if test="condition.startTime != null and condition.startTime != '' ">
            and so.create_time &gt;= #{condition.startTime}
        </if>
        <if test="condition.endTime != null and condition.endTime != '' ">
            and so.create_time &lt;= #{condition.endTime}
        </if>
        ORDER BY create_time DESC
    </select>

    <!-- 分页查询订单接口实体集合 -->
    <select id="findOrderApiBeanList" parameterType="com.leimingtech.service.utils.page.Pager"
            resultMap="BaseResultByApi">
        select
        <include refid="Base_Column_Api"/>
        from shop_order where 1=1
        <include refid="whereStatement"/>
        order by create_time desc
    </select>


    <!-- 分页查询订单用户 -->
    <select id="findOrderMemberApiBeanList" parameterType="com.leimingtech.service.utils.page.Pager"
            resultMap="BaseResultOm">
        select count(*) soCount,sum(order_amount) orderAmount,sor.buyer_id buyerId,sor.buyer_name
        buyerName,sm.create_time createTime
        from shop_order sor
        left join shop_member sm on sor.buyer_id=sm.member_id where 1=1
        <if test="condition.storeId != null and condition.storeId != '' ">
            and sor.store_id = #{condition.storeId}
        </if>
        GROUP BY sor.buyer_name,sm.create_time,sor.buyer_id
    </select>

    <!-- 分页查询订单接口实体集合 ，不显示取消订单-->
    <select id="findOrderApiBeanList1" parameterType="com.leimingtech.service.utils.page.Pager"
            resultMap="BaseResultByApi">
        select
        <include refid="Base_Column_Api"/>
        from shop_order where 1=1 and order_state!=0
        <include refid="whereStatement"/>
        order by create_time desc
    </select>
    <!-- 分页查询订单接口实体集合 ，未评价订单不显示已评价订单-->
    <select id="findOrderApiBeanList2" parameterType="com.leimingtech.service.utils.page.Pager"
            resultMap="BaseResultByApi">
        select
        <include refid="Base_Column_Api"/>
        from shop_order where 1=1 and evaluation_status!=1
        <include refid="whereStatement"/>
        order by create_time desc
    </select>
    <!-- 结算统计 start-->
    <select id="findBalance" parameterType="map" resultMap="BaseResultBalance">
        (select
        <if test="dbName == 'mysql'">
            FROM_UNIXTIME(finnshed_time/1000,#{timesn})
        </if>
        <if test="dbName == 'oracle'">
            TO_CHAR((TO_DATE('19700101','yyyy:mm:DD')+
            finnshed_time/86400000+TO_NUMBER(SUBSTR(TZ_OFFSET(sessiontimezone),1,3))/24 ), 'yyyy-mm-dd')
        </if>
        <if test="dbName == 'mssql'">
            CONVERT(varchar(${sqltimesn}),DATEADD(S,finnshed_time/1000,'1970-01-01 08:00:00'),120)
        </if>
        date,sum(goods_amount) as goods_amount_sum, sum(discount) as discount_sum ,sum(order_amount) as order_amount_sum
        , sum(goods_amount+shipping_fee) as goods_amount_shipping_fee_sum,sum(shipping_fee) as shipping_fee_sum
        ,sum(voucher_price) as voucher_price_sum
        from shop_order s_order
        where payment_state=1 and order_state=40 and store_id = #{storeId}
        <if test="starttime != null and starttime != '' ">
            and finnshed_time &gt; #{starttime}
        </if>
        <if test="endtime != null and endtime != '' ">
            and finnshed_time &lt;= #{endtime}
        </if>
        <if test="balanceState != null and balanceState != '' ">
            and balance_state=#{balanceState}
        </if>
        GROUP BY
        <if test="dbName == 'mysql'">
            FROM_UNIXTIME(finnshed_time/1000,#{timesn})
        </if>
        <if test="dbName == 'oracle'">
            TO_CHAR((TO_DATE('19700101','yyyy:mm:DD')+
            finnshed_time/86400000+TO_NUMBER(SUBSTR(TZ_OFFSET(sessiontimezone),1,3))/24 ), 'yyyy-mm-dd')
        </if>
        <if test="dbName == 'mssql'">
            CONVERT(varchar(${sqltimesn}),DATEADD(S,finnshed_time/1000,'1970-01-01 08:00:00'),120)
        </if>
        )
        union
        (select '总计' as date,sum(goods_amount) as goods_amount_sum, sum(discount) as discount_sum ,sum(order_amount) as
        order_amount_sum , sum(goods_amount+shipping_fee)as goods_amount_shipping_fee_sum,sum(shipping_fee) as
        shipping_fee_sum ,sum(voucher_price) as voucher_price_sum from shop_order s_order
        where payment_state=1 and order_state=40 and store_id = #{storeId}
        <if test="starttime != null and starttime != '' ">
            and finnshed_time &gt; #{starttime}
        </if>
        <if test="endtime != null and endtime != '' ">
            and finnshed_time &lt;= #{endtime}
        </if>
        <if test="balanceState != null and balanceState != '' ">
            and balance_state=#{balanceState}
        </if>
        )
    </select>
    <!-- 结算统计 end-->
    <!-- 总金额 start-->
    <select id="findSellerPriceCountByStoreId" parameterType="java.lang.String" resultType="java.lang.Float">
		select sum(order_amount+predeposit_amount) as sum from shop_order where store_id= #{storeId} and (order_state = 40 or order_state=50 or order_state=60);
    </select>
    <!-- 总金额 end-->

</mapper>